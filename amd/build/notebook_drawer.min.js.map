{"version":3,"file":"notebook_drawer.min.js","sources":["../src/notebook_drawer.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the notebook drawer.\n *\n * @module     local_notebook/notebook_drawer\n * @copyright  2022 Université de Montréal\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nrequire.config({\n    enforceDefine: true,\n    shim: {\n        'bootstrapTable': ['jquery'],\n        'bootstrapTableLocale': ['jquery', 'bootstrapTable'],\n        'bootstrapTableLocaleMobile': ['jquery', 'bootstrapTable']\n    },\n    paths: {\n        bootstrapTable: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table.min',\n        bootstrapTableLocale: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table-locale-all.min',\n        bootstrapTableLocaleMobile: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table-mobile.min'\n    }\n});\n\ndefine(\n    [\n        'jquery',\n        'core/custom_interaction_events',\n        'core/drawer',\n        'core/pubsub',\n        'core/notification',\n        'core/str',\n        'core/ajax',\n        'core/templates',\n        'core_form/changechecker',\n        'bootstrapTable',\n        'bootstrapTableLocale',\n        'bootstrapTableLocaleMobile',\n    ], function(\n        $,\n        CustomEvents,\n        Drawer,\n        PubSub,\n        notification,\n        str,\n        ajax,\n        Templates,\n        FormChangeChecker\n    ) {\n\n    var SELECTORS = {\n        JUMPTO: '.notebookbutton [data-region=\"jumpto\"]',\n        DRAWER: '[data-region=\"right-hand-notebook-drawer\"]',\n        HEADER_CONTAINER: '[data-region=\"header-container\"]',\n        BODY_CONTAINER: '[data-region=\"body-container\"]',\n        BODY_LIST: '[data-region=\"view-overview\"]',\n        CLOSE_BUTTON: '[data-action=\"closedrawer\"]',\n        NOTE_TABLE: '#notebook-table',\n        REFRESH_BUTTON: 'button[name=\"refresh\"]',\n        ADD_BUTTON_TO_CLONE: '#notebook-table-container .addnote',\n        SAVE_BUTTON: '#savenote',\n        CANCEL_BUTTON: '#cancel-add-edit',\n        VIEW_NOTE: '[data-region=\"body-container\"] #notebook-table .viewnote',\n        BACK_TO_LIST: '[data-region=\"header-container\"] .backtolist',\n        NOTE_FORM_ID: 'noteform',\n        NOTE_VIEW: '[data-region=\"body-container\"] [data-region=\"view-note\"]',\n        FOOTER_NOTE_VIEW: '[data-region=\"footer-container\"] [data-region=\"view-note\"]',\n        HEADER_NOTE_VIEW: '[data-region=\"header-container\"] [data-region=\"view-note\"]',\n        HEADER_NOTE_CREATED_DATE: '[data-region=\"header-container\"] .notecreateddate',\n        HEADER_NOTE_LAST_MODIFIED_DATE: '[data-region=\"header-container\"] .notelastmodifieddate',\n        NOTE_FORM_CONTAINER: '[data-region=\"body-container\"] #add-note-form-container',\n        NOTE_LIST_CONTAINER: '[data-region=\"body-container\"] #list-note-container',\n        NOTE_TABLE_CONTAINER: '[data-region=\"body-container\"] #notebook-table-container',\n        NOTE_TABLE_ROW: '[data-region=\"body-container\"] #notebook-table tr',\n        NOTE_FORM: '[data-region=\"body-container\"] #noteform',\n        NOTE_SUMMARY: '#id_notebook_editor',\n        NOTE_ITEMID: '[name=\"notebook_editor[itemid]\"]',\n        HEADER_NOTE_DELETE: '[data-region=\"header-container\"] .deletenote',\n        HEADER_NOTE_EDIT: '[data-region=\"header-container\"] .editnote',\n        FOOTER_NOTE_TAGS: '[data-region=\"footer-container\"] .notetags',\n        MESSAGE_SUCCESS_CONTAINER: '#message-success-container',\n        DIALOGUE_CONTAINER: '[data-region=\"right-hand-notebook-drawer\"] [data-region=\"confirm-dialogue-container\"]',\n        CONFIRM_TEXT_MULTI: '[data-region=\"right-hand-notebook-drawer\"] [data-region=\"confirm-dialogue-container\"] ' +\n            '.multiplenotes',\n        CONFIRM_TEXT_SINGLE: '[data-region=\"right-hand-notebook-drawer\"] [data-region=\"confirm-dialogue-container\"] ' +\n            '.singlenote',\n        CONFIRM_DELETE_BUTTON_MULTI: '[data-region=\"confirm-dialogue-container\"] [data-action=\"confirm-delete-multiple\"]',\n        CONFIRM_DELETE_BUTTON_SINGLE: '[data-region=\"confirm-dialogue-container\"] [data-action=\"confirm-delete-single\"]',\n        CANCEL_DELETE_BUTTON_MULTI: '[data-region=\"confirm-dialogue-container\"] [data-action=\"cancel-delete-multiple\"]',\n        CANCEL_DELETE_BUTTON_SINGLE: '[data-region=\"confirm-dialogue-container\"] [data-action=\"cancel-delete-single\"]',\n        DELETE_NOTE_BUTTON: '.deletenote',\n        CHECKBOX_LIST_NOTE: '[name=\"btSelectItem\"]',\n        CHECKBOX_ALL_NOTE: '[name=\"btSelectAll\"]',\n        TABLE_DELETE_BUTTON: '#delete-selected-notes',\n        NOTE_LIST_ACTIONS: '#note-list-actions',\n        SELECTED_NOTE_COUNT: '#note-list-actions .selected-note-count',\n        CLOSE_NOTE_LIST_ACTIONS: '#note-list-actions .close',\n        TABLE_PAGINATION: '[data-region=\"right-hand-notebook-drawer\"] .fixed-table-pagination',\n        SEEALL_CONTAINER: '[data-region=\"footer-container\"] [data-region=\"view-overview\"]'\n    };\n    var Events = {\n        SHOW: 'notebook-drawer-show',\n        HIDE: 'notebook-drawer-hide',\n        TOGGLE_VISIBILITY: 'notebook-drawer-toggle',\n    };\n    /** Editor listeners state */\n    var editorListenersInitialized = false;\n\n    /**\n     * Show the Notebook drawer.\n     *\n     * @param {Object} root The notebook drawer container.\n     */\n    var show = (root) => {\n        if (!root.attr('data-shown')) {\n            root.attr('data-shown', true);\n        }\n\n        var drawerRoot = getDrawerRoot(root);\n        if (drawerRoot.length) {\n            Drawer.show(drawerRoot);\n            // Here load list.\n            displayNotes();\n        }\n    };\n\n    /**\n     * Refresh notes.\n     *\n     */\n    var refreshNotes = () => {\n        let previousPageNumber = this.$table.bootstrapTable('getOptions').pageNumber;\n        this.$table.bootstrapTable('destroy');\n        displayNotes(previousPageNumber);\n    };\n\n    /**\n     * Get formatted tags.\n     *\n     * @param {Array.<Object>} tags\n     * @return {String} return tags html\n     */\n    var getFormattedTags = (tags) => {\n        var tagshtml = '';\n\n        tags.forEach(function(item) {\n            // TODO: Replace with mustache rendering.\n            // If item has a # it means course or activity has been deleted.\n            let badge = 'badge-info badge-pill';\n            if (item.url === '#') {\n                badge = 'badge-secondary';\n                tagshtml += '<span class=\"badge ' + badge + ' text-truncate context-note\">'\n                    + item.title + '</span>';\n            } else {\n                tagshtml += '<span class=\"badge ' + badge + ' text-truncate context-note\">'\n                    + '<a title=\"' + item.title + '\" href=\"' + item.url + '\">' + item.title + '</a></span>';\n            }\n        });\n\n        return tagshtml;\n    };\n\n    /**\n     * Add blur note content.\n     *\n     */\n    var addBlurContent = () => {\n        let selectors = SELECTORS.FOOTER_NOTE_VIEW + ', ' + SELECTORS.HEADER_NOTE_CREATED_DATE + ', ' +\n            SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE + ', ' + SELECTORS.NOTE_VIEW;\n        $(selectors).addClass('blur-content');\n    };\n\n    /**\n     * Remove blur note content.\n     *\n     */\n    var removeBlurContent = () => {\n        let selectors = SELECTORS.FOOTER_NOTE_VIEW + ', ' + SELECTORS.HEADER_NOTE_CREATED_DATE + ', ' +\n            SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE + ', ' + SELECTORS.NOTE_VIEW;\n        $(selectors).removeClass('blur-content');\n    };\n\n    /**\n     * Display note.\n     *\n     * @param {String} noteid The note id\n     */\n    var displayNote = (noteid) => {\n        var promises = [];\n        displayNoteView();\n        addBlurContent();\n\n        promises = ajax.call([{\n            methodname: 'local_notebook_read_note',\n            args: {\n                noteid: noteid\n            }\n        },\n        {\n            methodname: 'local_notebook_note_viewed',\n            args: {\n                id: noteid\n            }\n        }]);\n        promises[0].done(function(result) {\n            let data = {};\n            data.subject = result.subject;\n            data.summary = result.summary;\n\n            // Note created datetime.\n            let createdtimestamp = result.created * 1000;\n            let datecreation = new Date(createdtimestamp).toLocaleDateString(document.documentElement.lang, {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n            });\n            let timecreation = new Date(createdtimestamp).toLocaleTimeString(document.documentElement.lang);\n\n            // Note last modified datetime.\n            let lastmodifiedtimestamp = result.lastmodified * 1000;\n            let lastmodifieddate = new Date(lastmodifiedtimestamp).toLocaleDateString(document.documentElement.lang, {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n            });\n            let lastmodifiedtime = new Date(lastmodifiedtimestamp).toLocaleTimeString(document.documentElement.lang);\n\n            Templates.render('local_notebook/note_content', data)\n                .then(function(html) {\n                    // Display content.\n                    $(SELECTORS.NOTE_VIEW).html(html);\n                    // Display dates.\n                    $(SELECTORS.HEADER_NOTE_CREATED_DATE).html(datecreation + ' ' + timecreation);\n                    $(SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE).html(lastmodifieddate + ' ' + lastmodifiedtime);\n                    // Set buttons.\n                    $(SELECTORS.HEADER_NOTE_DELETE).data('noteid', result.id);\n                    $(SELECTORS.HEADER_NOTE_EDIT).data('noteid', result.id);\n                    // Set tags.\n                    $(SELECTORS.FOOTER_NOTE_TAGS).html(getFormattedTags(result.tags));\n                    // Remove blur content.\n                    removeBlurContent();\n                    // Set focus on button back to list.\n                    $(SELECTORS.BACK_TO_LIST).data('noteid', result.id);\n                    $(SELECTORS.BACK_TO_LIST).focus();\n                    // Log viewed event.\n                    promises[1].done(function() { }).fail(Notification.exception);\n                    return;\n                })\n                .fail(Notification.exception);\n        }).fail(Notification.exception);\n    };\n\n    /**\n     * Display notes.\n     *\n     * @param {Number} pageNumber The pagination page number\n     */\n    var displayNotes = (pageNumber) => {\n        var promises = [];\n\n        promises = ajax.call([{\n            methodname: 'local_notebook_notes_list',\n            args: {\n                userid: this.userid,\n                courseid: this.courseid,\n                coursemoduleid: this.coursemoduleid\n            }\n        }]);\n        var stringkeys = [\n            {\n                key: 'notetitle',\n                component: 'local_notebook'\n            },\n            {\n                key: 'notedate',\n                component: 'local_notebook',\n            },\n            {\n                key: 'displaynote',\n                component: 'local_notebook',\n            },\n            {\n                key: 'lastmodifieddate',\n                component: 'local_notebook',\n            }\n        ];\n\n        // eslint-disable-next-line promise/always-return\n        str.get_strings(stringkeys).then(function(langStrings) {\n            let tablecontainer = document.querySelector('#list-note-container');\n            let tableheight = tablecontainer.offsetHeight;\n\n            let data = [];\n            promises[0].done(function(result) {\n                $.each(result, function(index, value) {\n                    let subject = {};\n                    subject.text = value.subject;\n                    subject.tags = value.tags;\n                    data.push({\n                        'id': value.id,\n                        'subjecttext': value.subject,\n                        'subject': subject,\n                        'lastmodified': value.lastmodified\n                    });\n                });\n                this.$table.bootstrapTable({\n                    locale: document.documentElement.lang,\n                    paginationParts: ['pageInfo', 'pageList'],\n                    paginationSuccessivelySize: 2,\n                    paginationPagesBySide: 1,\n                    data: data,\n                    height: tableheight,\n                    pageNumber: pageNumber,\n                    columns: [\n                        [{\n                            field: 'state',\n                            checkbox: true\n                        },\n                        {\n                            field: 'subjecttext',\n                            visible: false\n                        },\n                        {\n                            field: 'subject',\n                            title: langStrings[0],\n                            sortable: true,\n                            sortName: 'subjecttext',\n                            formatter: function(value) {\n                                let nbtags = value.tags.length;\n                                var td = \"<span class='text-truncate subject'>\" + value.text + \"</span><br>\";\n                                var nbclass = nbtags === 1 ? 'wcn-1' : 'wcn-2';\n                                value.tags.forEach(function(item) {\n                                    // TODO: Replace with mustache rendering.\n                                    // If item has a # it means course or activity has been deleted.\n                                    let badge = 'badge-info badge-pill';\n                                    if (item.url === '#') {\n                                        badge = 'badge-secondary';\n                                        td += '<span class=\"badge ' + badge + ' text-truncate context-note ' + nbclass\n                                            + '\" title=\"' + item.tooltip + '\">' + item.title + '</span>';\n                                    } else {\n                                        td += '<span class=\"badge ' + badge + ' text-truncate context-note ' + nbclass\n                                            + '\"><a title=\"' + item.tooltip + '\" href=\"' + item.url + '\">'\n                                            + item.title + '</a></span>';\n                                    }\n                                });\n                                return td;\n                            }\n                        },\n                        {\n                            field: 'lastmodified',\n                            title: langStrings[1],\n                            sortable: true,\n                            formatter: function(value) {\n                                var today = new Date(value * 1000).toLocaleDateString(document.documentElement.lang, {\n                                    day: 'numeric',\n                                    month: 'short',\n                                    year: 'numeric'\n                                });\n                                return today;\n                            },\n                            width: 110,\n                            titleTooltip: langStrings[3]\n                        },\n                        {\n                            field: 'operate',\n                            title: '',\n                            align: 'center',\n                            width: 35,\n                            formatter: function(value, row) {\n                                return [\n                                    '<a class=\"viewnote\" data-noteid=\"' + row.id + '\" href=\"#\" title=\"' + langStrings[2] + '\">',\n                                    '<i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>',\n                                    '</a>'\n                                ].join('');\n                            }\n                        }]\n                    ],\n                    onSearch: function() {\n                        closeNoteListActions();\n                    },\n                    onPostBody: function() {\n                        displayAddNoteButton();\n                        // Wrap the second and the third card view for Flexbox.\n                        $(\".card-views\").each(function() {\n                            $(this).find('.card-view').slice(1, 3).wrapAll('<div class=\"item-content\" />');\n                        });\n                    }\n                });\n            }).fail(notification.exception);\n        }).fail(Notification.exception);\n    };\n\n    /**\n     * Display add note button.\n     *\n     */\n    var displayAddNoteButton = () => {\n        if (!$(SELECTORS.NOTE_TABLE_CONTAINER).find('.fixed-table-container .addnote').length) {\n            let addnotebtn = $(SELECTORS.ADD_BUTTON_TO_CLONE).clone().removeClass('hidden');\n            $(SELECTORS.NOTE_TABLE_CONTAINER).find('.fixed-table-container').append(addnotebtn);\n\n            // Add note click event .\n            addnotebtn.on('click', function() {\n                $(SELECTORS.DRAWER).removeClass('list').addClass('add');\n                resetNoteForm();\n                toggleNoteForm('show');\n                closeNoteListActions();\n            });\n        }\n    };\n\n    /**\n     * Close note list actions.\n     */\n    var closeNoteListActions = () => {\n        if (!$(SELECTORS.NOTE_LIST_ACTIONS).hasClass('hidden')) {\n            $(SELECTORS.CLOSE_NOTE_LIST_ACTIONS).trigger('click');\n        }\n    };\n\n    /**\n     * Close the confirm delete dialogue..\n     *\n     * @param {String} action The action type of cancel.\n     * @param {Boolean} focus\n     */\n    var closeConfirmDialogue = (action, focus) => {\n        $(SELECTORS.DIALOGUE_CONTAINER).addClass('hidden');\n        if (!focus) {\n            return;\n        }\n        if (action === 'multiple') {\n            $(SELECTORS.TABLE_DELETE_BUTTON).focus();\n        } else {\n            $(SELECTORS.DELETE_NOTE_BUTTON).focus();\n        }\n    };\n\n    /**\n     * Show the confirm delete dialogue..\n     *\n     * @param {String} action\n     */\n    var showConfirmDialogue = (action) => {\n        $(SELECTORS.DIALOGUE_CONTAINER).removeClass('hidden');\n        if (action === 'multiple') {\n            let toshow = SELECTORS.CONFIRM_TEXT_MULTI + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_MULTI;\n            let tohide = SELECTORS.CONFIRM_TEXT_SINGLE + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_SINGLE;\n            $(tohide).addClass('hidden');\n            $(toshow).removeClass('hidden');\n            let list = [];\n            $(SELECTORS.DRAWER + ' ' + SELECTORS.CHECKBOX_LIST_NOTE + ':checked').each(function() {\n                list.push($(this).val());\n            });\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_MULTI).data('noteid', list);\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_MULTI).focus();\n        } else {\n            let tohide = SELECTORS.CONFIRM_TEXT_MULTI + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_MULTI;\n            let toshow = SELECTORS.CONFIRM_TEXT_SINGLE + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_SINGLE;\n            $(tohide).addClass('hidden');\n            $(toshow).removeClass('hidden');\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE).data('noteid',\n                $(SELECTORS.HEADER_NOTE_DELETE).data('noteid'));\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE).focus();\n        }\n    };\n\n    /**\n     * Hide the notebook drawer.\n     *\n     * @param {Object} root The notebook drawer container.\n     */\n    var hide = (root) => {\n        var drawerRoot = getDrawerRoot(root);\n        if (drawerRoot.length) {\n            Drawer.hide(drawerRoot);\n        }\n    };\n\n    /**\n     * Check if the drawer is visible.\n     *\n     * @param {Object} root The notebook drawer container.\n     * @return {boolean}\n     */\n    var isVisible = (root) => {\n        var drawerRoot = getDrawerRoot(root);\n        if (drawerRoot.length) {\n            return Drawer.isVisible(drawerRoot);\n        }\n        return true;\n    };\n\n    /**\n     * Set Jump from button\n     *\n     * @param {String} buttonid The originating button id\n     */\n    var setJumpFrom = (buttonid) => {\n        $(SELECTORS.DRAWER).attr('data-origin', buttonid);\n    };\n\n    /**\n     * Find the root element of the drawer based on the using the drawer content root's ID.\n     *\n     * @param {Object} contentRoot The drawer content's root element.\n     * @returns {*|jQuery}\n     */\n    var getDrawerRoot = (contentRoot) => {\n        contentRoot = $(contentRoot);\n        return contentRoot.closest('[data-region=\"right-hand-notebook-drawer\"]');\n    };\n\n    /**\n     * Submit form ajax.\n     * @return {boolean}\n     */\n    var submitFormAjax = () => {\n        if ($(document.activeElement).data('action') == 'reset') {\n            resetNoteForm();\n        } else {\n            let args = {};\n            let update = false;\n            let service = 'local_notebook_add_note';\n            let noteid = $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val();\n            if (noteid !== '0') {\n                update = true;\n                service = 'local_notebook_update_note';\n                args.noteid = noteid;\n            } else {\n                args.userid = this.userid;\n                args.courseid = this.courseid;\n                args.coursemoduleid = this.coursemoduleid;\n            }\n            args.subject = $(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]').val();\n            args.note = $(SELECTORS.NOTE_SUMMARY).val();\n            args.itemid = $(SELECTORS.NOTE_ITEMID).val();\n            ajax.call([{\n                methodname: service,\n                args: args,\n                done: function(result) {\n                    if (result) {\n                        var noteid = args.noteid;\n                        if (!update) {\n                            noteid = result;\n                            delete args.subject;\n                            delete args.note;\n                            delete args.noteid;\n                            delete args.itemid;\n                            ajax.call([{\n                                methodname: 'local_notebook_get_form_subject',\n                                args: args,\n                                done: function(subject) {\n                                    if (subject) {\n                                        // Set new subject.\n                                        $(SELECTORS.NOTE_FORM + ' input[name=\"subjectorigin\"]').val(subject);\n                                        // Reset form.\n                                        resetNoteForm();\n                                        // Display success message.\n                                        displayMessageSuccess('notesaved');\n                                        // Refresh list.\n                                        refreshNotes();\n                                    }\n                                },\n                                fail: notification.exception\n                            }]);\n                        } else {\n                            // Reset form.\n                            resetNoteForm();\n                            // Display success message.\n                            displayMessageSuccess('notesaved');\n                            // Refresh list.\n                            refreshNotes();\n                        }\n\n                        // Display note.\n                        displayNote(noteid);\n                    }\n                },\n                fail: notification.exception\n            }]);\n        }\n        return false;\n    };\n\n    /**\n     * Submit delete ajax.\n     * @return {boolean}\n     */\n    var submitDeleteAjax = () => {\n        let action = $(document.activeElement).data('action');\n        let notesids = [];\n        let keymessage = 'notedeleted';\n        if (action === 'confirm-delete-multiple') {\n            notesids = $(document.activeElement).data('noteid');\n            keymessage = 'notedeletedmultiple';\n        } else {\n            notesids.push($(document.activeElement).data('noteid'));\n        }\n        ajax.call([{\n            methodname: 'local_notebook_delete_notes',\n            args: {notes: notesids},\n            done: function(result) {\n                if (result) {\n                    // Close dialogue.\n                    closeConfirmDialogue('multiple', false);\n                    if (action === 'confirm-delete-single') {\n                        toggleNoteForm('hide');\n                        hideNoteView(false);\n                    }\n                    // Display success message.\n                    displayMessageSuccess(keymessage);\n\n                    // Hide note list actions.\n                    if (action === 'confirm-delete-multiple') {\n                        $(SELECTORS.NOTE_LIST_ACTIONS).addClass('hidden');\n                        toggleNoteListFooter('show');\n                    }\n\n                    // Set list mode.\n                    $(SELECTORS.DRAWER).removeClass('view').addClass('list');\n\n                    // Refresh list.\n                    refreshNotes();\n                }\n            },\n            fail: notification.exception\n        }]);\n        return false;\n    };\n\n    /**\n     * Reset form.\n     *\n     */\n    var resetNoteForm = () => {\n        $(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]').val($(SELECTORS.NOTE_FORM + ' input[name=\"subjectorigin\"]').val());\n        $(SELECTORS.NOTE_FORM + ' textarea').val('');\n        if (window.tinyMCE !== undefined) {\n            getTinyMce().setContent('');\n        } else {\n            $(SELECTORS.BODY_CONTAINER + \" #id_notebook_editoreditable\").html('');\n        }\n        $(SELECTORS.NOTE_FORM + ' textarea').trigger('change');\n        $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val(0);\n        // Remove message success if exist.\n        $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html('');\n\n    };\n\n    /**\n     * Get the tiny mce editor\n     * @returns {object} Tiny Mce editor instance\n     */\n    var getTinyMce = () => window.tinyMCE.get(SELECTORS.NOTE_SUMMARY.replace('#', ''));\n\n    /**\n     * Hide note view.\n     *\n     * @param {String} focus\n     */\n    var hideNoteView = (focus) => {\n        $(SELECTORS.HEADER_NOTE_VIEW).addClass('hidden');\n        $(SELECTORS.HEADER_NOTE_VIEW).attr('aria-hidden', true);\n        $(SELECTORS.FOOTER_NOTE_VIEW).addClass('hidden');\n        $(SELECTORS.FOOTER_NOTE_VIEW).attr('aria-hidden', true);\n        $(SELECTORS.NOTE_VIEW).addClass('hidden');\n        $(SELECTORS.NOTE_VIEW).attr('aria-hidden', true);\n        $(SELECTORS.BODY_LIST).removeClass('hidden');\n        $(SELECTORS.BODY_LIST).removeAttr('aria-hidden');\n        // Set focus back to last item clicked.\n        if (!focus) {\n            return;\n        }\n        $(focus).focus();\n    };\n\n    /**\n     * Display note view.\n     */\n    var displayNoteView = () => {\n        $(SELECTORS.DRAWER).removeClass('list add edit').addClass('view');\n        $(SELECTORS.HEADER_NOTE_VIEW).removeClass('hidden');\n        $(SELECTORS.HEADER_NOTE_VIEW).removeAttr('aria-hidden');\n        $(SELECTORS.FOOTER_NOTE_VIEW).removeClass('hidden');\n        $(SELECTORS.FOOTER_NOTE_VIEW).removeAttr('aria-hidden');\n        $(SELECTORS.NOTE_VIEW).removeClass('hidden');\n        $(SELECTORS.NOTE_VIEW).removeAttr('aria-hidden');\n        $(SELECTORS.BODY_LIST).addClass('hidden');\n        $(SELECTORS.BODY_LIST).attr('aria-hidden', true);\n        $(SELECTORS.NOTE_TABLE_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Toggle note form.\n     *\n     * @param {String} action show or hide\n     */\n    var toggleNoteForm = (action) => {\n        if (action === 'show') {\n            // Enable/disable save button.\n            toggleSaveButton();\n            if (!editorListenersInitialized) {\n                if (window.tinyMCE !== undefined) {\n                    getTinyMce().on('input', toggleSaveButton);\n                } else {\n                    $(SELECTORS.BODY_CONTAINER + ' form textarea').on('change', toggleSaveButton);\n                }\n                $(SELECTORS.BODY_CONTAINER + ' form input[type=\"text\"]').on('input', toggleSaveButton);\n            }\n            editorListenersInitialized = true;\n            $(SELECTORS.NOTE_LIST_CONTAINER).removeClass('h-100');\n            $(SELECTORS.NOTE_TABLE_CONTAINER).addClass('hidden');\n            $(SELECTORS.NOTE_FORM_CONTAINER).removeClass('hidden');\n        } else {\n            $(SELECTORS.NOTE_LIST_CONTAINER).addClass('h-100');\n            $(SELECTORS.NOTE_TABLE_CONTAINER).removeClass('hidden');\n            $(SELECTORS.NOTE_FORM_CONTAINER).addClass('hidden');\n        }\n    };\n\n    /**\n     * Edit note view.\n     *\n     * @param {String} noteid\n     */\n    var editNoteView = (noteid) => {\n        ajax.call([{\n            methodname: 'local_notebook_read_note',\n            args: {noteid: noteid},\n            done: function(result) {\n                if (result) {\n                    $(SELECTORS.DRAWER).removeClass('view').addClass('edit');\n                    if (window.tinyMCE !== undefined) {\n                        getTinyMce().setContent(result.summary);\n                    } else {\n                        $(SELECTORS.BODY_CONTAINER + \" #id_notebook_editoreditable\").html(result.summary);\n                    }\n                    $(SELECTORS.NOTE_FORM + ' textarea').val($(SELECTORS.NOTE_VIEW + ' .textareaorigin').val());\n                    $(SELECTORS.NOTE_FORM + ' textarea').trigger('change');\n                    $(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]').val(result.subject);\n                    $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val(noteid);\n                    hideNoteView(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]');\n                    toggleSaveButton();\n                    toggleNoteForm('show');\n                    $(SELECTORS.DRAWER).removeClass('view').addClass('edit');\n                }\n            },\n            fail: notification.exception\n        }]);\n    };\n\n    /**\n     * Display message success.\n     *\n     * @param {String} key the string identifier.\n     *\n     */\n    var displayMessageSuccess = (key) => {\n        // Remove old message.\n        $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html('');\n        var stringkeys = [\n            {\n                key: key,\n                component: 'local_notebook'\n            },\n            {\n                key: 'close',\n                component: 'core'\n            }\n        ];\n\n        str.get_strings(stringkeys).then(function(langStrings) {\n            let messageHtml = '<div class=\"alert alert-success alert-block fade in \" role=\"alert\">' +\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"' + langStrings[1] + '\">×</button>' +\n                langStrings[0] + '</div>';\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html(messageHtml);\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER + ' .alert button').focus();\n            setTimeout(function() {\n                $(SELECTORS.MESSAGE_SUCCESS_CONTAINER + ' .alert').fadeOut();\n            }, 10000);\n        });\n    };\n\n    /**\n     * Toggle save button.\n     *\n     */\n    var toggleSaveButton = () => {\n        let editorcontent = window.tinyMCE !== undefined\n            ? getTinyMce().getContent()\n            : $(SELECTORS.BODY_CONTAINER + \" #id_notebook_editoreditable\").html();\n        let emptyeditor = false;\n        let noteid = $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val();\n        let samecontent = false;\n        if (noteid !== '0') {\n            let subjectform = $(SELECTORS.NOTE_FORM + ' input[type=\"text\"]').val();\n            let subjectorigin = $(SELECTORS.DRAWER + ' .titlenote').html();\n            let summaryorigin = $(SELECTORS.DRAWER + ' .summarynote').html();\n            if (editorcontent !== undefined\n                && subjectform.localeCompare(subjectorigin) === 0\n                && editorcontent.localeCompare(summaryorigin) === 0) {\n                samecontent = true;\n            }\n        }\n        if (editorcontent !== undefined && editorcontent.replace(/<(.|\\n)*?>/g, '').trim().length === 0\n            && !editorcontent.includes(\"<img\")) {\n            emptyeditor = true;\n        }\n        if ($(SELECTORS.NOTE_FORM + ' input[type=\"text\"]').val() == '' || emptyeditor || samecontent) {\n            $(SELECTORS.NOTE_FORM + ' ' + SELECTORS.SAVE_BUTTON).prop('disabled', true);\n        } else {\n            $(SELECTORS.NOTE_FORM + ' ' + SELECTORS.SAVE_BUTTON).prop('disabled', false);\n        }\n    };\n\n    /**\n     * Toggle note list footer (pagination/ seeAll link).\n     *\n     * @param {String} action show or hide\n     */\n    var toggleNoteListFooter = (action) => {\n        if (action === 'hide') {\n            $(SELECTORS.TABLE_PAGINATION).addClass('invisible');\n            $(SELECTORS.SEEALL_CONTAINER).addClass('invisible');\n        } else {\n            $(SELECTORS.TABLE_PAGINATION).removeClass('invisible');\n            $(SELECTORS.SEEALL_CONTAINER).removeClass('invisible');\n        }\n    };\n\n    /**\n     * Toggle Note list actions.\n     *\n     */\n    var toggleNoteListActions = () => {\n        let selectednotecount = $(SELECTORS.DRAWER + ' ' + SELECTORS.CHECKBOX_LIST_NOTE + ':checked').length;\n\n        if (selectednotecount) {\n            let arialabel = selectednotecount + ' ' + $(SELECTORS.SELECTED_NOTE_COUNT).attr('data-arialabel');\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).empty();\n            $(SELECTORS.SELECTED_NOTE_COUNT).text(selectednotecount);\n            $(SELECTORS.SELECTED_NOTE_COUNT).attr('aria-label', arialabel);\n            toggleNoteListFooter('hide');\n            $(SELECTORS.NOTE_LIST_ACTIONS).removeClass('hidden');\n        } else {\n            toggleNoteListFooter('show');\n            $(SELECTORS.NOTE_LIST_ACTIONS).addClass('hidden');\n        }\n    };\n\n    /**\n     * Listen to showing and hiding the notebook drawer.\n     *\n     * @param {Object} root The notebook drawer container.\n     * @param {String} userid The user ID\n     * @param {String} courseid The course ID\n     * @param {String} coursemoduleid The cours module ID\n     */\n    var registerEventListeners = (root, userid, courseid, coursemoduleid) => {\n        this.userid = userid;\n        this.courseid = courseid;\n        this.coursemoduleid = coursemoduleid;\n        this.$table = $(SELECTORS.NOTE_TABLE);\n        $(SELECTORS.DRAWER).on('click', SELECTORS.REFRESH_BUTTON, function() {\n            refreshNotes();\n        });\n        CustomEvents.define(root, [CustomEvents.events.activate]);\n\n        // Init state of the notebook button\n        notebookButtonHandleOffset();\n        // Add event listener when the drawer is toggled\n        require(['theme_boost/drawers'], (Drawers) => {\n            $(document).on(Drawers.eventTypes.drawerShown, () => notebookButtonHandleOffset());\n            $(document).on(Drawers.eventTypes.drawerHidden, () => notebookButtonHandleOffset());\n        });\n\n        PubSub.subscribe(Events.SHOW, function() {\n            show(root);\n        });\n\n        PubSub.subscribe(Events.HIDE, function() {\n            hide(root);\n        });\n\n        PubSub.subscribe(Events.TOGGLE_VISIBILITY, function(buttonid) {\n            if (isVisible(root)) {\n                hide(root);\n                $(SELECTORS.JUMPTO).attr('tabindex', -1);\n                FormChangeChecker.watchFormById(SELECTORS.NOTE_FORM_ID);\n                FormChangeChecker.resetAllFormDirtyStates();\n            } else {\n                show(root);\n                setJumpFrom(buttonid);\n                $(SELECTORS.JUMPTO).attr('tabindex', 0);\n            }\n        });\n\n        $(SELECTORS.JUMPTO).on('focus', function() {\n            var firstInput = root.find(SELECTORS.CLOSE_BUTTON);\n            if (firstInput.length) {\n                firstInput.focus();\n            } else {\n                $(SELECTORS.HEADER_CONTAINER).find(SELECTORS.ROUTES_BACK).focus();\n            }\n        });\n\n        $(SELECTORS.DRAWER).focus(function() {\n            var button = $(this).attr('data-origin');\n            if (button) {\n                $('#' + button).focus();\n            }\n        });\n\n        var closebutton = root.find(SELECTORS.CLOSE_BUTTON);\n        closebutton.on(CustomEvents.events.activate, function(e, data) {\n            data.originalEvent.preventDefault();\n            var button = $(SELECTORS.DRAWER).attr('data-origin');\n            if (button) {\n                $('#' + button).focus();\n            }\n            PubSub.publish(Events.TOGGLE_VISIBILITY);\n        });\n\n        // Back to list.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.BACK_TO_LIST, function() {\n            toggleNoteForm('hide');\n            hideNoteView(SELECTORS.VIEW_NOTE + '[data-noteid=\"' + $(this).data('noteid') + '\"]');\n            $(SELECTORS.DRAWER).removeClass('view').addClass('list');\n        });\n\n        // Note table row click event.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.NOTE_TABLE_ROW + ' td:not(:first-child)', function(e) {\n            if (!$(e.target).hasClass('context-note') &&\n                !$(e.target).parent().hasClass('context-note')) {\n                let noteid = $(this).closest('tr').find('.viewnote').data('noteid');\n                displayNote(noteid);\n                closeNoteListActions();\n            }\n        });\n        // Note table row checkbox cell click event.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.NOTE_TABLE_ROW + ' td:first-child', function(e) {\n            if ($(this).find('.card-views').length) { // Card view mode.\n                if (!$(e.target).is('label, input') &&\n                    !$(e.target).hasClass('context-note') &&\n                    !$(e.target).parent().hasClass('context-note')) {\n                    let noteid = $(this).closest('tr').find('.viewnote').data('noteid');\n                    displayNote(noteid);\n                    closeNoteListActions();\n                }\n            } else {\n                $(this).find('input[type=\"checkbox\"]').trigger('click');\n            }\n        });\n        // Edit note.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.HEADER_NOTE_EDIT, function() {\n            editNoteView($(this).data('noteid'));\n        });\n        // Cancel add/dit note.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.CANCEL_BUTTON, function(e) {\n            e.preventDefault();\n            if ($(SELECTORS.DRAWER).hasClass('edit')) {\n                let noteid = $(SELECTORS.HEADER_NOTE_EDIT).data('noteid');\n                displayNote(noteid);\n            } else {\n                toggleNoteForm('hide');\n                $(SELECTORS.DRAWER).removeClass('add').addClass('list');\n            }\n        });\n        // Cancel delete note.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.CANCEL_DELETE_BUTTON_SINGLE, function() {\n            closeConfirmDialogue('single', true);\n        });\n        $(SELECTORS.DRAWER).on('click', SELECTORS.CANCEL_DELETE_BUTTON_MULTI, function() {\n            closeConfirmDialogue('multiple', true);\n        });\n        // Delete note button.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.DELETE_NOTE_BUTTON, function() {\n            let action = 'multiple';\n            if ($(this).data('noteid')) {\n                action = 'single';\n            }\n            showConfirmDialogue(action);\n        });\n        // Confirm delete note button.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ' , ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI,\n            submitDeleteAjax);\n        // If notebook drawer is visible and we open message drawer, hide notebook.\n        var msdrawerRoot = Drawer.getDrawerRoot($('[data-region=\"message-drawer\"]'));\n        var messagetoggler = $('[id^=\"message-drawer-toggle-\"]');\n        messagetoggler.on('click keydown keypress', function() {\n            var keycode = (event.keyCode ? event.keyCode : event.which);\n            // Enter, space or click.\n            if (keycode == '13' || keycode == '32' || event.type == 'click') {\n                if (Drawer.isVisible(msdrawerRoot) && isVisible(root)) {\n                    hide(root);\n                }\n            }\n        });\n\n        $(SELECTORS.BODY_CONTAINER).on('submit', 'form', submitFormAjax);\n\n        // Enable/disbled delete button.\n        $(SELECTORS.DRAWER).on('change', SELECTORS.CHECKBOX_LIST_NOTE + ', ' + SELECTORS.CHECKBOX_ALL_NOTE,\n            toggleNoteListActions);\n\n        // Close note list actions.\n        $(SELECTORS.DRAWER).on('click', SELECTORS.CLOSE_NOTE_LIST_ACTIONS, function() {\n            $(SELECTORS.CHECKBOX_ALL_NOTE).prop('checked', false).trigger('click');\n            toggleNoteListFooter('show');\n        });\n    };\n\n    /**\n     * Initialise the notebook drawer.\n     *\n     * @param {Object} root The notebook drawer container.\n     * @param {String} userid The user ID\n     * @param {String} courseid The course ID\n     * @param {String} coursemoduleid The cours module ID\n     */\n    var init = (root, userid, courseid, coursemoduleid) => {\n        root = $(root);\n        registerEventListeners(root, userid, courseid, coursemoduleid);\n    };\n\n    /**\n     * Handle the position of the notebook button when the right drawer is opened\n     */\n    var notebookButtonHandleOffset = () => {\n        let notebookButton = $('.notebookbutton');\n        let rightDrawer = $('#theme_boost-drawers-blocks');\n        if (notebookButton.length && rightDrawer.length) {\n            notebookButton.toggleClass('drawer-right-opened', rightDrawer.hasClass('show'));\n        }\n    };\n\n    return {\n        init: init,\n    };\n});\n"],"names":["require","config","enforceDefine","shim","paths","bootstrapTable","M","cfg","wwwroot","bootstrapTableLocale","bootstrapTableLocaleMobile","define","$","CustomEvents","Drawer","PubSub","notification","str","ajax","Templates","FormChangeChecker","SELECTORS","JUMPTO","DRAWER","HEADER_CONTAINER","BODY_CONTAINER","BODY_LIST","CLOSE_BUTTON","NOTE_TABLE","REFRESH_BUTTON","ADD_BUTTON_TO_CLONE","SAVE_BUTTON","CANCEL_BUTTON","VIEW_NOTE","BACK_TO_LIST","NOTE_FORM_ID","NOTE_VIEW","FOOTER_NOTE_VIEW","HEADER_NOTE_VIEW","HEADER_NOTE_CREATED_DATE","HEADER_NOTE_LAST_MODIFIED_DATE","NOTE_FORM_CONTAINER","NOTE_LIST_CONTAINER","NOTE_TABLE_CONTAINER","NOTE_TABLE_ROW","NOTE_FORM","NOTE_SUMMARY","NOTE_ITEMID","HEADER_NOTE_DELETE","HEADER_NOTE_EDIT","FOOTER_NOTE_TAGS","MESSAGE_SUCCESS_CONTAINER","DIALOGUE_CONTAINER","CONFIRM_TEXT_MULTI","CONFIRM_TEXT_SINGLE","CONFIRM_DELETE_BUTTON_MULTI","CONFIRM_DELETE_BUTTON_SINGLE","CANCEL_DELETE_BUTTON_MULTI","CANCEL_DELETE_BUTTON_SINGLE","DELETE_NOTE_BUTTON","CHECKBOX_LIST_NOTE","CHECKBOX_ALL_NOTE","TABLE_DELETE_BUTTON","NOTE_LIST_ACTIONS","SELECTED_NOTE_COUNT","CLOSE_NOTE_LIST_ACTIONS","TABLE_PAGINATION","SEEALL_CONTAINER","Events","editorListenersInitialized","show","root","attr","drawerRoot","getDrawerRoot","length","displayNotes","refreshNotes","previousPageNumber","this","$table","pageNumber","displayNote","noteid","promises","displayNoteView","selectors","addClass","addBlurContent","call","methodname","args","id","done","result","data","subject","summary","createdtimestamp","created","datecreation","Date","toLocaleDateString","document","documentElement","lang","day","month","year","timecreation","toLocaleTimeString","lastmodifiedtimestamp","lastmodified","lastmodifieddate","lastmodifiedtime","render","then","html","tags","tagshtml","forEach","item","badge","url","title","removeClass","removeBlurContent","focus","fail","Notification","exception","userid","courseid","coursemoduleid","get_strings","key","component","langStrings","tableheight","querySelector","offsetHeight","each","index","value","text","push","locale","paginationParts","paginationSuccessivelySize","paginationPagesBySide","height","columns","field","checkbox","visible","sortable","sortName","formatter","nbtags","td","nbclass","tooltip","width","titleTooltip","align","row","join","onSearch","closeNoteListActions","onPostBody","displayAddNoteButton","find","slice","wrapAll","addnotebtn","clone","append","on","resetNoteForm","toggleNoteForm","hasClass","trigger","closeConfirmDialogue","action","showConfirmDialogue","toshow","tohide","list","val","hide","isVisible","contentRoot","closest","submitFormAjax","activeElement","update","service","note","itemid","displayMessageSuccess","submitDeleteAjax","notesids","keymessage","notes","hideNoteView","toggleNoteListFooter","undefined","window","tinyMCE","getTinyMce","setContent","get","replace","removeAttr","toggleSaveButton","stringkeys","messageHtml","setTimeout","fadeOut","editorcontent","getContent","emptyeditor","samecontent","subjectform","subjectorigin","summaryorigin","localeCompare","trim","includes","prop","toggleNoteListActions","selectednotecount","arialabel","empty","registerEventListeners","events","activate","notebookButtonHandleOffset","Drawers","eventTypes","drawerShown","drawerHidden","subscribe","buttonid","watchFormById","resetAllFormDirtyStates","setJumpFrom","firstInput","ROUTES_BACK","button","e","originalEvent","preventDefault","publish","target","parent","is","msdrawerRoot","keycode","event","keyCode","which","type","notebookButton","rightDrawer","toggleClass","init"],"mappings":"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"}