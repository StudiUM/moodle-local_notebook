{"version":3,"file":"notebook_drawer.min.js","sources":["../src/notebook_drawer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the notebook drawer.\n *\n * @module     local_notebook/notebook_drawer\n * @copyright  2022 Université de Montréal\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nrequire.config({\n    enforceDefine: true,\n    shim: {\n        'bootstrapTable': ['jquery'],\n        'bootstrapTableLocale': ['jquery', 'bootstrapTable'],\n        'bootstrapTableLocaleMobile': ['jquery', 'bootstrapTable']\n    },\n    paths: {\n        bootstrapTable: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table.min',\n        bootstrapTableLocale: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table-locale-all.min',\n        bootstrapTableLocaleMobile: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table-mobile.min'\n    }\n});\n\ndefine(\n    [\n        'jquery',\n        'core/custom_interaction_events',\n        'core/drawer',\n        'core/pubsub',\n        'core/notification',\n        'core/str',\n        'core/ajax',\n        'core/templates',\n        'bootstrapTable',\n        'bootstrapTableLocale',\n        'bootstrapTableLocaleMobile',\n    ], function(\n        $,\n        CustomEvents,\n        Drawer,\n        PubSub,\n        notification,\n        str,\n        ajax,\n        Templates\n    ) {\n\n        var SELECTORS = {\n            JUMPTO: '.notebookbutton [data-region=\"jumpto\"]',\n            DRAWER: '[data-region=\"right-hand-notebook-drawer\"]',\n            HEADER_CONTAINER: '[data-region=\"header-container\"]',\n            BODY_CONTAINER: '[data-region=\"body-container\"]',\n            BODY_LIST: '[data-region=\"view-overview\"]',\n            CLOSE_BUTTON: '[data-action=\"closedrawer\"]',\n            NOTE_TABLE: '#notebook-table',\n            REFRESH_BUTTON: 'button[name=\"refresh\"]',\n            ADD_BUTTON_TO_CLONE: '#notebook-table-container .addnote',\n            SAVE_BUTTON: '#savenote',\n            CANCEL_BUTTON: '#cancel-add-edit',\n            NOTE_FORM_ID: 'noteform',\n            VIEW_NOTE: '[data-region=\"body-container\"] #notebook-table .viewnote',\n            BACK_TO_LIST: '[data-region=\"header-container\"] .backtolist',\n            NOTE_VIEW: '[data-region=\"body-container\"] [data-region=\"view-note\"]',\n            FOOTER_NOTE_VIEW: '[data-region=\"footer-container\"] [data-region=\"view-note\"]',\n            HEADER_NOTE_VIEW: '[data-region=\"header-container\"] [data-region=\"view-note\"]',\n            HEADER_NOTE_CREATED_DATE: '[data-region=\"header-container\"] .notecreateddate',\n            HEADER_NOTE_LAST_MODIFIED_DATE: '[data-region=\"header-container\"] .notelastmodifieddate',\n            NOTE_FORM_CONTAINER: '[data-region=\"body-container\"] #add-note-form-container',\n            NOTE_LIST_CONTAINER: '[data-region=\"body-container\"] #list-note-container',\n            NOTE_TABLE_CONTAINER: '[data-region=\"body-container\"] #notebook-table-container',\n            NOTE_TABLE_ROW: '[data-region=\"body-container\"] #notebook-table tr',\n            NOTE_FORM: '[data-region=\"body-container\"] #noteform',\n            HEADER_NOTE_DELETE: '[data-region=\"header-container\"] .deletenote',\n            HEADER_NOTE_EDIT: '[data-region=\"header-container\"] .editnote',\n            FOOTER_NOTE_TAGS: '[data-region=\"footer-container\"] .notetags',\n            MESSAGE_SUCCESS_CONTAINER: '#message-success-container',\n            DIALOGUE_CONTAINER: '[data-region=\"right-hand-notebook-drawer\"] [data-region=\"confirm-dialogue-container\"]',\n            CONFIRM_TEXT_MULTI: '[data-region=\"right-hand-notebook-drawer\"] [data-region=\"confirm-dialogue-container\"] ' +\n                '.multiplenotes',\n            CONFIRM_TEXT_SINGLE: '[data-region=\"right-hand-notebook-drawer\"] [data-region=\"confirm-dialogue-container\"] ' +\n                '.singlenote',\n            CONFIRM_DELETE_BUTTON_MULTI: '[data-region=\"confirm-dialogue-container\"] [data-action=\"confirm-delete-multiple\"]',\n            CONFIRM_DELETE_BUTTON_SINGLE: '[data-region=\"confirm-dialogue-container\"] [data-action=\"confirm-delete-single\"]',\n            CANCEL_DELETE_BUTTON_MULTI: '[data-region=\"confirm-dialogue-container\"] [data-action=\"cancel-delete-multiple\"]',\n            CANCEL_DELETE_BUTTON_SINGLE: '[data-region=\"confirm-dialogue-container\"] [data-action=\"cancel-delete-single\"]',\n            DELETE_NOTE_BUTTON: '.deletenote',\n            CHECKBOX_LIST_NOTE: '[name=\"btSelectItem\"]',\n            CHECKBOX_ALL_NOTE: '[name=\"btSelectAll\"]',\n            TABLE_DELETE_BUTTON: '#delete-selected-notes',\n            NOTE_LIST_ACTIONS: '#note-list-actions',\n            SELECTED_NOTE_COUNT: '#note-list-actions .selected-note-count',\n            CLOSE_NOTE_LIST_ACTIONS: '#note-list-actions .close',\n            TABLE_PAGINATION: '[data-region=\"right-hand-notebook-drawer\"] .fixed-table-pagination',\n            SEEALL_CONTAINER: '[data-region=\"footer-container\"] [data-region=\"view-overview\"]'\n        };\n        var Events = {\n            SHOW: 'notebook-drawer-show',\n            HIDE: 'notebook-drawer-hide',\n            TOGGLE_VISIBILITY: 'notebook-drawer-toggle',\n        };\n\n\n        /**\n         * Show the Notebook drawer.\n         *\n         * @param {Object} root The notebook drawer container.\n         */\n        var show = (root) => {\n            if (!root.attr('data-shown')) {\n                root.attr('data-shown', true);\n            }\n\n            var drawerRoot = getDrawerRoot(root);\n            if (drawerRoot.length) {\n                Drawer.show(drawerRoot);\n                // Here load list.\n                displayNotes();\n            }\n        };\n\n        /**\n         * Refresh notes.\n         *\n         */\n        var refreshNotes = () => {\n            let previousPageNumber = this.$table.bootstrapTable('getOptions').pageNumber;\n            this.$table.bootstrapTable('destroy');\n            displayNotes(previousPageNumber);\n        };\n\n        /**\n         * Get formatted tags.\n         *\n         * @param {Array.<Object>} tags\n         * @return {String} return tags html\n         */\n        var getFormattedTags = (tags) => {\n            var tagshtml = '';\n\n            tags.forEach(function(item) {\n                // TODO: Replace with mustache rendering.\n                // If item has a # it means course or activity has been deleted.\n                let badge = 'badge-info';\n                if (item.url === '#') {\n                    badge = 'badge-secondary';\n                    tagshtml += '<span class=\"badge ' + badge + ' text-truncate context-note\">'\n                    + item.title + '</span>';\n                } else {\n                    tagshtml += '<span class=\"badge ' + badge + ' text-truncate context-note\">'\n                        + '<a title=\"' + item.title + '\" href=\"' + item.url + '\">' + item.title + '</a></span>';\n                }\n            });\n\n            return tagshtml;\n        };\n\n        /**\n         * Add blur note content.\n         *\n         */\n        var addBlurContent = () => {\n            let selectors = SELECTORS.FOOTER_NOTE_VIEW + ', ' + SELECTORS.HEADER_NOTE_CREATED_DATE + ', ' +\n                SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE + ', '+ SELECTORS.NOTE_VIEW;\n            $(selectors).addClass('blur-content');\n        };\n\n        /**\n         * Remove blur note content.\n         *\n         */\n        var removeBlurContent = () => {\n            let selectors = SELECTORS.FOOTER_NOTE_VIEW + ', ' + SELECTORS.HEADER_NOTE_CREATED_DATE + ', ' +\n                SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE + ', '+ SELECTORS.NOTE_VIEW;\n            $(selectors).removeClass('blur-content');\n        };\n\n        /**\n         * Display note.\n         *\n         * @param {String} noteid The note id\n         */\n        var displayNote = (noteid) => {\n            var promises = [];\n            displayNoteView();\n            addBlurContent();\n\n            promises = ajax.call([{\n                methodname: 'local_notebook_read_note',\n                args: {\n                    noteid: noteid\n                }\n            },\n            {\n                methodname: 'local_notebook_note_viewed',\n                args: {\n                    id: noteid\n                }\n            }]);\n            promises[0].done(function (result) {\n                let data = {};\n                data.subject = result.subject;\n                data.summary = result.summary;\n\n                // Note created datetime.\n                let createdtimestamp = result.created * 1000;\n                let datecreation = new Date(createdtimestamp).toLocaleDateString(document.documentElement.lang, {\n                    day : 'numeric',\n                    month : 'short',\n                    year : 'numeric'\n                });\n                let timecreation = new Date(createdtimestamp).toLocaleTimeString(document.documentElement.lang);\n\n                // Note last modified datetime.\n                let lastmodifiedtimestamp = result.lastmodified * 1000;\n                let lastmodifieddate = new Date(lastmodifiedtimestamp).toLocaleDateString(document.documentElement.lang, {\n                    day : 'numeric',\n                    month : 'short',\n                    year : 'numeric'\n                });\n                let lastmodifiedtime = new Date(lastmodifiedtimestamp).toLocaleTimeString(document.documentElement.lang);\n\n                Templates.render('local_notebook/note_content', data)\n                .then(function(html) {\n                    // Display content.\n                    $(SELECTORS.NOTE_VIEW).html(html);\n                    // Display dates.\n                    $(SELECTORS.HEADER_NOTE_CREATED_DATE).html(datecreation + ' ' + timecreation);\n                    $(SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE).html(lastmodifieddate + ' ' + lastmodifiedtime);\n                    // Set buttons.\n                    $(SELECTORS.HEADER_NOTE_DELETE).data('noteid', result.id);\n                    $(SELECTORS.HEADER_NOTE_EDIT).data('noteid', result.id);\n                    // Set tags.\n                    $(SELECTORS.FOOTER_NOTE_TAGS).html(getFormattedTags(result.tags));\n                    // Remove blur content.\n                    removeBlurContent();\n                    // Set focus on button back to list.\n                    $(SELECTORS.BACK_TO_LIST).data('noteid', result.id);\n                    $(SELECTORS.BACK_TO_LIST).focus();\n                    // Log viewed event.\n                    promises[1].done(function () {}).fail(Notification.exception);\n                    return;\n                })\n                .fail(Notification.exception);\n            }).fail(Notification.exception);\n        };\n\n        /**\n         * Display notes.\n         *\n         * @param {Number} pageNumber The pagination page number\n         */\n        var displayNotes = (pageNumber) => {\n            var promises = [];\n\n            promises = ajax.call([{\n                methodname: 'local_notebook_notes_list',\n                args: {\n                    userid: this.userid,\n                    courseid: this.courseid,\n                    coursemoduleid: this.coursemoduleid\n                }\n            }]);\n            var stringkeys = [\n                {\n                    key: 'notetitle',\n                    component: 'local_notebook'\n                },\n                {\n                    key: 'notedate',\n                    component: 'local_notebook',\n                },\n                {\n                    key: 'displaynote',\n                    component: 'local_notebook',\n                },\n                {\n                    key: 'lastmodifieddate',\n                    component: 'local_notebook',\n                }\n            ];\n\n            // eslint-disable-next-line promise/always-return\n            str.get_strings(stringkeys).then(function(langStrings) {\n                let tablecontainer = document.querySelector('#list-note-container');\n                let tableheight = tablecontainer.offsetHeight;\n\n                let data = [];\n                promises[0].done(function (result) {\n                    $.each(result, function (index, value) {\n                        let subject = {};\n                        subject.text = value.subject;\n                        subject.tags = value.tags;\n                        data.push({\n                            'id': value.id,\n                            'subjecttext': value.subject,\n                            'subject': subject,\n                            'lastmodified': value.lastmodified\n                        });\n                    });\n                    this.$table.bootstrapTable({\n                        locale: document.documentElement.lang,\n                        paginationParts: ['pageInfo', 'pageList'],\n                        paginationSuccessivelySize: 2,\n                        paginationPagesBySide: 1,\n                        data: data,\n                        height: tableheight,\n                        pageNumber: pageNumber,\n                        columns: [\n                            [{\n                                field: 'state',\n                                checkbox: true\n                            },\n                            {\n                                field: 'subjecttext',\n                                visible: false\n                            },\n                            {\n                                field: 'subject',\n                                title: langStrings[0],\n                                sortable: true,\n                                sortName: 'subjecttext',\n                                formatter: function(value) {\n                                    let nbtags = value.tags.length;\n                                    var td = \"<span class='text-truncate subject'>\" + value.text + \"</span><br>\";\n                                    var nbclass = nbtags === 1 ? 'wcn-1' : 'wcn-2';\n                                    value.tags.forEach(function(item) {\n                                        // TODO: Replace with mustache rendering.\n                                        // If item has a # it means course or activity has been deleted.\n                                        let badge = 'badge-info';\n                                        if (item.url === '#') {\n                                            badge = 'badge-secondary';\n                                            td += '<span class=\"badge ' + badge + ' text-truncate context-note ' + nbclass\n                                            + '\" title=\"' + item.tooltip + '\">' + item.title + '</span>';\n                                        } else {\n                                            td += '<span class=\"badge ' + badge + ' text-truncate context-note ' + nbclass\n                                                + '\"><a title=\"' + item.tooltip + '\" href=\"' + item.url + '\">'\n                                                + item.title + '</a></span>';\n                                        }\n                                    });\n                                    return td;\n                                }\n                            },\n                            {\n                                field: 'lastmodified',\n                                title: langStrings[1],\n                                sortable: true,\n                                formatter: function(value) {\n                                    var today = new Date(value * 1000).toLocaleDateString(document.documentElement.lang, {\n                                        day : 'numeric',\n                                        month : 'short',\n                                        year : 'numeric'\n                                    });\n                                    return today;\n                                },\n                                width: 110,\n                                titleTooltip: langStrings[3]\n                            },\n                            {\n                                field: 'operate',\n                                title: '',\n                                align: 'center',\n                                width: 35,\n                                formatter: function(value, row) {\n                                    return [\n                                        '<a class=\"viewnote\" data-noteid=\"' + row.id + '\" href=\"#\" title=\"' + langStrings[2] + '\">',\n                                        '<i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>',\n                                        '</a>'\n                                    ].join('');\n                                }\n                            }]\n                        ],\n                        onSearch: function() {\n                            closeNoteListActions();\n                        },\n                        onPostBody: function() {\n                            displayAddNoteButton();\n                            // Wrap the second and the third card view for Flexbox.\n                            $(\".card-views\").each(function() {\n                                $(this).find('.card-view').slice(1, 3).wrapAll('<div class=\"item-content\" />');\n                            });\n                        }\n                    });\n                }).fail(notification.exception);\n            }).fail(Notification.exception);\n        };\n\n        /**\n         * Display add note button.\n         *\n         */\n        var displayAddNoteButton = () => {\n            if (!$(SELECTORS.NOTE_TABLE_CONTAINER).find('.fixed-table-container .addnote').length) {\n                let addnotebtn = $(SELECTORS.ADD_BUTTON_TO_CLONE).clone().removeClass('hidden');\n                $(SELECTORS.NOTE_TABLE_CONTAINER).find('.fixed-table-container').append(addnotebtn);\n\n                // Add note click event .\n                addnotebtn.on('click', function() {\n                    $(SELECTORS.DRAWER).removeClass('list').addClass('add');\n                    resetNoteForm();\n                    toggleNoteForm('show');\n                    closeNoteListActions();\n                });\n            }\n        };\n\n        /**\n         * Close note list actions.\n         */\n        var closeNoteListActions = () => {\n            if(!$(SELECTORS.NOTE_LIST_ACTIONS).hasClass('hidden')) {\n                $(SELECTORS.CLOSE_NOTE_LIST_ACTIONS).trigger('click');\n            }\n        };\n\n        /**\n         * Close the confirm delete dialogue..\n         *\n         * @param {String} action The action type of cancel.\n         * @param {Boolean} focus\n         */\n        var closeConfirmDialogue = (action, focus) => {\n            $(SELECTORS.DIALOGUE_CONTAINER).addClass('hidden');\n            if (!focus) {\n                return;\n            }\n            if (action === 'multiple') {\n                $(SELECTORS.TABLE_DELETE_BUTTON).focus();\n            } else {\n                $(SELECTORS.DELETE_NOTE_BUTTON).focus();\n            }\n        };\n\n        /**\n         * Show the confirm delete dialogue..\n         *\n         * @param {String} action\n         */\n        var showConfirmDialogue = (action) => {\n            $(SELECTORS.DIALOGUE_CONTAINER).removeClass('hidden');\n            if (action === 'multiple') {\n                let toshow = SELECTORS.CONFIRM_TEXT_MULTI + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI + ',' +\n                    SELECTORS.CANCEL_DELETE_BUTTON_MULTI;\n                let tohide = SELECTORS.CONFIRM_TEXT_SINGLE + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ',' +\n                    SELECTORS.CANCEL_DELETE_BUTTON_SINGLE;\n                $(tohide).addClass('hidden');\n                $(toshow).removeClass('hidden');\n                let list = [];\n                $(SELECTORS.DRAWER + ' ' + SELECTORS.CHECKBOX_LIST_NOTE + ':checked').each(function(){\n                    list.push($(this).val());\n                });\n                $(SELECTORS.CONFIRM_DELETE_BUTTON_MULTI).data('noteid', list);\n                $(SELECTORS.CONFIRM_DELETE_BUTTON_MULTI).focus();\n            } else {\n                let tohide = SELECTORS.CONFIRM_TEXT_MULTI + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI + ',' +\n                    SELECTORS.CANCEL_DELETE_BUTTON_MULTI;\n                let toshow = SELECTORS.CONFIRM_TEXT_SINGLE + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ',' +\n                    SELECTORS.CANCEL_DELETE_BUTTON_SINGLE;\n                $(tohide).addClass('hidden');\n                $(toshow).removeClass('hidden');\n                $(SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE).data('noteid',\n                $(SELECTORS.HEADER_NOTE_DELETE).data('noteid'));\n                $(SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE).focus();\n            }\n        };\n\n        /**\n         * Hide the notebook drawer.\n         *\n         * @param {Object} root The notebook drawer container.\n         */\n        var hide = (root) => {\n            var drawerRoot = getDrawerRoot(root);\n            if (drawerRoot.length) {\n                Drawer.hide(drawerRoot);\n            }\n        };\n\n        /**\n         * Check if the drawer is visible.\n         *\n         * @param {Object} root The notebook drawer container.\n         * @return {boolean}\n         */\n        var isVisible = (root) => {\n            var drawerRoot = getDrawerRoot(root);\n            if (drawerRoot.length) {\n                return Drawer.isVisible(drawerRoot);\n            }\n            return true;\n        };\n\n        /**\n         * Set Jump from button\n         *\n         * @param {String} buttonid The originating button id\n         */\n        var setJumpFrom = (buttonid) => {\n            $(SELECTORS.DRAWER).attr('data-origin', buttonid);\n        };\n\n        /**\n         * Find the root element of the drawer based on the using the drawer content root's ID.\n         *\n         * @param {Object} contentRoot The drawer content's root element.\n         * @returns {*|jQuery}\n         */\n        var getDrawerRoot = (contentRoot) => {\n            contentRoot = $(contentRoot);\n            return contentRoot.closest('[data-region=\"right-hand-notebook-drawer\"]');\n        };\n\n        /**\n         * Submit form ajax.\n         *\n         */\n        var submitFormAjax = () => {\n            if ($(document.activeElement).data('action') == 'reset') {\n                resetNoteForm();\n            } else {\n                let args = {};\n                let update = false;\n                let service = 'local_notebook_add_note';\n                let noteid = $(SELECTORS.NOTE_FORM +' input[name=\"noteid\"]').val();\n                if (noteid !== '0') {\n                    update = true;\n                    service = 'local_notebook_update_note';\n                    args.noteid = noteid;\n                } else {\n                    args.userid = this.userid;\n                    args.courseid = this.courseid;\n                    args.coursemoduleid = this.coursemoduleid;\n                }\n                args.subject = $(SELECTORS.NOTE_FORM +' input[name=\"subject\"]').val();\n                args.note = $(SELECTORS.NOTE_FORM).serialize();\n                ajax.call([{\n                    methodname: service,\n                    args: args,\n                    done: function(result) {\n                        if (result) {\n                            var noteid = args.noteid;\n                            if (!update) {\n                                noteid = result;\n                                delete args.subject;\n                                delete args.note;\n                                delete args.noteid;\n                                ajax.call([{\n                                    methodname: 'local_notebook_get_form_subject',\n                                    args: args,\n                                    done: function(subject) {\n                                        if (subject) {\n                                            // Set new subject.\n                                            $(SELECTORS.NOTE_FORM +' input[name=\"subjectorigin\"]').val(subject);\n                                            // Reset form.\n                                            resetNoteForm();\n                                            // Display success message.\n                                            displayMessageSuccess('notesaved');\n                                            // Refresh list.\n                                            refreshNotes();\n                                        }\n                                    },\n                                    fail: notification.exception\n                                }]);\n                            } else {\n                                // Reset form.\n                                resetNoteForm();\n                                // Display success message.\n                                displayMessageSuccess('notesaved');\n                                // Refresh list.\n                                refreshNotes();\n                            }\n\n                            // Display note.\n                            displayNote(noteid);\n                        }\n                    },\n                    fail: notification.exception\n                }]);\n            }\n            return false;\n        };\n\n        /**\n         * Submit delete ajax.\n         *\n         */\n        var submitDeleteAjax = () => {\n            let action = $(document.activeElement).data('action');\n            let notesids = [];\n            let keymessage = 'notedeleted';\n            if (action === 'confirm-delete-multiple') {\n                notesids = $(document.activeElement).data('noteid');\n                keymessage = 'notedeletedmultiple';\n            } else {\n                notesids.push($(document.activeElement).data('noteid'));\n            }\n            ajax.call([{\n                methodname: 'local_notebook_delete_notes',\n                args: {notes: notesids},\n                done: function(result) {\n                    if (result) {\n                        // Close dialogue.\n                        closeConfirmDialogue('multiple', false);\n                        if (action === 'confirm-delete-single') {\n                            toggleNoteForm('hide');\n                            hideNoteView(false);\n                        }\n                        // Display success message.\n                        displayMessageSuccess(keymessage);\n\n                        // Hide note list actions.\n                        if (action === 'confirm-delete-multiple') {\n                            $(SELECTORS.NOTE_LIST_ACTIONS).addClass('hidden');\n                            toggleNoteListFooter('show');\n                        }\n\n                        // Set list mode.\n                        $(SELECTORS.DRAWER).removeClass('view').addClass('list');\n\n                        // Refresh list.\n                        refreshNotes();\n                    }\n                },\n                fail: notification.exception\n            }]);\n            return false;\n        };\n\n        /**\n         * Reset form.\n         *\n         */\n        var resetNoteForm = () => {\n            $(SELECTORS.NOTE_FORM +' input[name=\"subject\"]').val($(SELECTORS.NOTE_FORM +' input[name=\"subjectorigin\"]').val());\n            $(SELECTORS.NOTE_FORM + ' textarea').val('');\n            $(SELECTORS.BODY_CONTAINER+ \" #id_noteeditable\").html('');\n            $(SELECTORS.NOTE_FORM + ' textarea').trigger('change');\n            $(SELECTORS.NOTE_FORM +' input[name=\"noteid\"]').val(0);\n            // Remove message success if exist.\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html('');\n\n        };\n\n        /**\n         * Hide note view.\n         *\n         * @param {String} focus\n         */\n        var hideNoteView = (focus) => {\n            $(SELECTORS.HEADER_NOTE_VIEW).addClass('hidden');\n            $(SELECTORS.HEADER_NOTE_VIEW).attr('aria-hidden', true);\n            $(SELECTORS.FOOTER_NOTE_VIEW).addClass('hidden');\n            $(SELECTORS.FOOTER_NOTE_VIEW).attr('aria-hidden', true);\n            $(SELECTORS.NOTE_VIEW).addClass('hidden');\n            $(SELECTORS.NOTE_VIEW).attr('aria-hidden', true);\n            $(SELECTORS.BODY_LIST).removeClass('hidden');\n            $(SELECTORS.BODY_LIST).removeAttr('aria-hidden');\n            // Set focus back to last item clicked.\n            if (!focus) {\n                return;\n            }\n            $(focus).focus();\n        };\n\n        /**\n         * Display note view.\n         */\n        var displayNoteView = () => {\n            $(SELECTORS.DRAWER).removeClass('list add edit').addClass('view');\n            $(SELECTORS.HEADER_NOTE_VIEW).removeClass('hidden');\n            $(SELECTORS.HEADER_NOTE_VIEW).removeAttr('aria-hidden');\n            $(SELECTORS.FOOTER_NOTE_VIEW).removeClass('hidden');\n            $(SELECTORS.FOOTER_NOTE_VIEW).removeAttr('aria-hidden');\n            $(SELECTORS.NOTE_VIEW).removeClass('hidden');\n            $(SELECTORS.NOTE_VIEW).removeAttr('aria-hidden');\n            $(SELECTORS.BODY_LIST).addClass('hidden');\n            $(SELECTORS.BODY_LIST).attr('aria-hidden', true);\n            $(SELECTORS.NOTE_TABLE_CONTAINER).addClass('hidden');\n        };\n\n        /**\n         * Toggle note form.\n         *\n         * @param {String} action show or hide\n         */\n         var toggleNoteForm = (action) => {\n            if (action === 'show') {\n                $(SELECTORS.NOTE_LIST_CONTAINER).removeClass('h-100');\n                $(SELECTORS.NOTE_TABLE_CONTAINER).addClass('hidden');\n                $(SELECTORS.NOTE_FORM_CONTAINER).removeClass('hidden');\n            } else {\n                $(SELECTORS.NOTE_LIST_CONTAINER).addClass('h-100');\n                $(SELECTORS.NOTE_TABLE_CONTAINER).removeClass('hidden');\n                $(SELECTORS.NOTE_FORM_CONTAINER).addClass('hidden');\n            }\n        };\n\n        /**\n         * Edit note view.\n         *\n         * @param {String} noteid\n         */\n        var editNoteView = (noteid) => {\n            ajax.call([{\n                methodname: 'local_notebook_read_note',\n                args: {noteid: noteid},\n                done: function(result) {\n                    if (result) {\n                        $(SELECTORS.DRAWER).removeClass('view').addClass('edit');\n                        $(SELECTORS.BODY_CONTAINER+ \" #id_noteeditable\").html(result.summary);\n                        $(SELECTORS.NOTE_FORM + ' textarea').val($(SELECTORS.NOTE_VIEW + ' .textareaorigin').val());\n                        $(SELECTORS.NOTE_FORM + ' textarea').trigger('change');\n                        $(SELECTORS.NOTE_FORM +' input[name=\"subject\"]').val(result.subject);\n                        $(SELECTORS.NOTE_FORM +' input[name=\"noteid\"]').val(noteid);\n                        hideNoteView(SELECTORS.NOTE_FORM +' input[name=\"subject\"]');\n                        toggleSaveButton();\n                        toggleNoteForm('show');\n                        $(SELECTORS.DRAWER).removeClass('view').addClass('edit');\n                    }\n                },\n                fail: notification.exception\n            }]);\n        };\n\n        /**\n         * Display message success.\n         *\n         * @param {String} key the string identifier.\n         *\n         */\n        var displayMessageSuccess = (key) => {\n            // Remove old message.\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html('');\n            var stringkeys = [\n                {\n                    key: key,\n                    component: 'local_notebook'\n                },\n                {\n                    key: 'close',\n                    component: 'core'\n                }\n            ];\n\n            str.get_strings(stringkeys).then(function(langStrings) {\n                let messageHtml = '<div class=\"alert alert-success alert-block fade in \" role=\"alert\">' +\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"' + langStrings[1] + '\">×</button>' +\n                langStrings[0] + '</div>';\n                $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html(messageHtml);\n                $(SELECTORS.MESSAGE_SUCCESS_CONTAINER + ' .alert button').focus();\n                setTimeout(function() {\n                    $(SELECTORS.MESSAGE_SUCCESS_CONTAINER + ' .alert').fadeOut();\n                }, 10000);\n            });\n        };\n\n        /**\n         * Toggle save button.\n         *\n         */\n        var toggleSaveButton = () => {\n            let editorcontent = $(SELECTORS.BODY_CONTAINER+ \" #id_noteeditable\").html();\n            let emptyeditor = false;\n            let noteid = $(SELECTORS.NOTE_FORM +' input[name=\"noteid\"]').val();\n            let samecontent = false;\n            if (noteid !== '0') {\n                let subjectform = $(SELECTORS.NOTE_FORM + ' input[type=\"text\"]').val();\n                let subjectorigin = $(SELECTORS.DRAWER + ' .titlenote').html();\n                let summaryorigin = $(SELECTORS.DRAWER + ' .summarynote').html();\n                if (subjectform.localeCompare(subjectorigin) === 0 && editorcontent.localeCompare(summaryorigin) === 0) {\n                    samecontent = true;\n                }\n            }\n            if (editorcontent.replace(/<(.|\\n)*?>/g, '').trim().length === 0 && !editorcontent.includes(\"<img\")) {\n                emptyeditor = true;\n            }\n            if ($(SELECTORS.NOTE_FORM + ' input[type=\"text\"]').val() == '' || emptyeditor || samecontent) {\n                $(SELECTORS.NOTE_FORM + ' ' + SELECTORS.SAVE_BUTTON).prop('disabled', true);\n            } else {\n                $(SELECTORS.NOTE_FORM + ' ' + SELECTORS.SAVE_BUTTON).prop('disabled', false);\n            }\n        };\n\n        /**\n         * Toggle note list footer (pagination/ seeAll link).\n         *\n         * @param {String} action show or hide\n         */\n         var toggleNoteListFooter = (action) => {\n            if (action === 'hide') {\n                $(SELECTORS.TABLE_PAGINATION).addClass('invisible');\n                $(SELECTORS.SEEALL_CONTAINER).addClass('invisible');\n            } else {\n                $(SELECTORS.TABLE_PAGINATION).removeClass('invisible');\n                $(SELECTORS.SEEALL_CONTAINER).removeClass('invisible');\n            }\n        };\n\n        /**\n         * Toggle Note list actions.\n         *\n         */\n        var toggleNoteListActions = () => {\n            let selectednotecount = $(SELECTORS.DRAWER + ' ' + SELECTORS.CHECKBOX_LIST_NOTE + ':checked').length;\n\n            if (selectednotecount) {\n                let arialabel = selectednotecount + ' ' + $(SELECTORS.SELECTED_NOTE_COUNT).attr('data-arialabel');\n                $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).empty();\n                $(SELECTORS.SELECTED_NOTE_COUNT).text(selectednotecount);\n                $(SELECTORS.SELECTED_NOTE_COUNT).attr('aria-label', arialabel);\n                toggleNoteListFooter('hide');\n                $(SELECTORS.NOTE_LIST_ACTIONS).removeClass('hidden');\n            } else {\n                toggleNoteListFooter('show');\n                $(SELECTORS.NOTE_LIST_ACTIONS).addClass('hidden');\n            }\n        };\n\n        /**\n         * Listen to showing and hiding the notebook drawer.\n         *\n         * @param {Object} root The notebook drawer container.\n         * @param {String} userid The user ID\n         * @param {String} courseid The course ID\n         * @param {String} coursemoduleid The cours module ID\n         */\n        var registerEventListeners = (root, userid, courseid, coursemoduleid) => {\n            this.userid = userid;\n            this.courseid = courseid;\n            this.coursemoduleid = coursemoduleid;\n            this.$table = $(SELECTORS.NOTE_TABLE);\n            $(SELECTORS.DRAWER).on('click', SELECTORS.REFRESH_BUTTON, function () {\n                refreshNotes();\n            });\n            CustomEvents.define(root, [CustomEvents.events.activate]);\n            PubSub.subscribe(Events.SHOW, function () {\n                show(root);\n            });\n\n            PubSub.subscribe(Events.HIDE, function () {\n                hide(root);\n            });\n\n            PubSub.subscribe(Events.TOGGLE_VISIBILITY, function (buttonid) {\n                if (isVisible(root)) {\n                    hide(root);\n                    $(SELECTORS.JUMPTO).attr('tabindex', -1);\n                    // Load formchangechecker module.\n                    Y.use('moodle-core-formchangechecker', function() {\n                        M.core_formchangechecker.init({formid: SELECTORS.NOTE_FORM_ID});\n                    });\n                    Y.use('moodle-core-formchangechecker', function() {\n                        M.core_formchangechecker.reset_form_dirty_state();\n                    });\n                } else {\n                    show(root);\n                    setJumpFrom(buttonid);\n                    $(SELECTORS.JUMPTO).attr('tabindex', 0);\n                }\n            });\n\n            $(SELECTORS.JUMPTO).on('focus', function() {\n                var firstInput = root.find(SELECTORS.CLOSE_BUTTON);\n                if (firstInput.length) {\n                    firstInput.focus();\n                } else {\n                    $(SELECTORS.HEADER_CONTAINER).find(SELECTORS.ROUTES_BACK).focus();\n                }\n            });\n\n            $(SELECTORS.DRAWER).focus(function() {\n                var button = $(this).attr('data-origin');\n                if (button) {\n                    $('#' + button).focus();\n                }\n            });\n\n            var closebutton = root.find(SELECTORS.CLOSE_BUTTON);\n            closebutton.on(CustomEvents.events.activate, function(e, data) {\n                data.originalEvent.preventDefault();\n                var button = $(SELECTORS.DRAWER).attr('data-origin');\n                if (button) {\n                    $('#' + button).focus();\n                }\n                PubSub.publish(Events.TOGGLE_VISIBILITY);\n            });\n\n            // Back to list.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.BACK_TO_LIST, function() {\n                toggleNoteForm('hide');\n                hideNoteView(SELECTORS.VIEW_NOTE + '[data-noteid=\"' + $(this).data('noteid') + '\"]');\n                $(SELECTORS.DRAWER).removeClass('view').addClass('list');\n            });\n\n            // Note table row click event.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.NOTE_TABLE_ROW + ' td:not(:first-child)', function(e) {\n                if (!$(e.target).hasClass('context-note') &&\n                    !$(e.target).parent().hasClass('context-note')) {\n                    let noteid = $(this).closest('tr').find('.viewnote').data('noteid');\n                    displayNote(noteid);\n                    closeNoteListActions();\n                }\n            });\n            // Note table row checkbox cell click event.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.NOTE_TABLE_ROW + ' td:first-child', function(e) {\n                if($(this).find('.card-views').length) { // card view mode.\n                    if (!$(e.target).is('label, input') &&\n                        !$(e.target).hasClass('context-note') &&\n                        !$(e.target).parent().hasClass('context-note')) {\n                        let noteid = $(this).closest('tr').find('.viewnote').data('noteid');\n                        displayNote(noteid);\n                        closeNoteListActions();\n                    }\n                } else {\n                    $(this).find('input[type=\"checkbox\"]').trigger('click');\n                }\n            });\n            // Edit note.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.HEADER_NOTE_EDIT, function() {\n                editNoteView($(this).data('noteid'));\n            });\n            // Cancel add/dit note.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.CANCEL_BUTTON, function(e) {\n                e.preventDefault();\n                if($(SELECTORS.DRAWER).hasClass('edit')) {\n                    let noteid = $(SELECTORS.HEADER_NOTE_EDIT).data('noteid');\n                    displayNote(noteid);\n                } else {\n                    toggleNoteForm('hide');\n                    $(SELECTORS.DRAWER).removeClass('add').addClass('list');\n                }\n            });\n            // Cancel delete note.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.CANCEL_DELETE_BUTTON_SINGLE, function() {\n                closeConfirmDialogue('single', true);\n            });\n            $(SELECTORS.DRAWER).on('click', SELECTORS.CANCEL_DELETE_BUTTON_MULTI, function() {\n                closeConfirmDialogue('multiple', true);\n            });\n            // Delete note button.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.DELETE_NOTE_BUTTON, function() {\n                let action = 'multiple';\n                if ($(this).data('noteid')) {\n                    action = 'single';\n                }\n                showConfirmDialogue(action);\n            });\n            // Confirm delete note button.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ' , ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI,\n                            submitDeleteAjax);\n            // If notebook drawer is visible and we open message drawer, hide notebook.\n            var msdrawerRoot = Drawer.getDrawerRoot($('[data-region=\"message-drawer\"]'));\n            var messagetoggler = $('[id^=\"message-drawer-toggle-\"]');\n            messagetoggler.on('click keydown keypress', function() {\n                var keycode = (event.keyCode ? event.keyCode : event.which);\n                // Enter, space or click.\n                if (keycode == '13' || keycode == '32' || event.type == 'click') {\n                    if (Drawer.isVisible(msdrawerRoot) && isVisible(root)) {\n                        hide(root);\n                    }\n                }\n            });\n\n            $(SELECTORS.BODY_CONTAINER).on('submit', 'form', submitFormAjax);\n\n            // Enable/disbled save button.\n            toggleSaveButton();\n            $(SELECTORS.BODY_CONTAINER + ' form input[type=\"text\"]').on('input', toggleSaveButton);\n            $(SELECTORS.BODY_CONTAINER + ' form textarea').on('change', toggleSaveButton);\n            // Enable/disbled delete button.\n            $(SELECTORS.DRAWER).on('change', SELECTORS.CHECKBOX_LIST_NOTE + ', ' + SELECTORS.CHECKBOX_ALL_NOTE,\n                            toggleNoteListActions);\n\n            // Close note list actions.\n            $(SELECTORS.DRAWER).on('click', SELECTORS.CLOSE_NOTE_LIST_ACTIONS, function() {\n                $(SELECTORS.CHECKBOX_ALL_NOTE).prop('checked', false).trigger('click');\n                toggleNoteListFooter('show');\n            });\n        };\n\n        /**\n         * Initialise the notebook drawer.\n         *\n         * @param {Object} root The notebook drawer container.\n         * @param {String} userid The user ID\n         * @param {String} courseid The course ID\n         * @param {String} coursemoduleid The cours module ID\n         */\n        var init = (root, userid, courseid, coursemoduleid) => {\n            root = $(root);\n            registerEventListeners(root, userid, courseid, coursemoduleid);\n        };\n\n        return {\n            init: init,\n        };\n    });\n"],"names":["require","config","enforceDefine","shim","paths","bootstrapTable","M","cfg","wwwroot","bootstrapTableLocale","bootstrapTableLocaleMobile","define","$","CustomEvents","Drawer","PubSub","notification","str","ajax","Templates","SELECTORS","JUMPTO","DRAWER","HEADER_CONTAINER","BODY_CONTAINER","BODY_LIST","CLOSE_BUTTON","NOTE_TABLE","REFRESH_BUTTON","ADD_BUTTON_TO_CLONE","SAVE_BUTTON","CANCEL_BUTTON","NOTE_FORM_ID","VIEW_NOTE","BACK_TO_LIST","NOTE_VIEW","FOOTER_NOTE_VIEW","HEADER_NOTE_VIEW","HEADER_NOTE_CREATED_DATE","HEADER_NOTE_LAST_MODIFIED_DATE","NOTE_FORM_CONTAINER","NOTE_LIST_CONTAINER","NOTE_TABLE_CONTAINER","NOTE_TABLE_ROW","NOTE_FORM","HEADER_NOTE_DELETE","HEADER_NOTE_EDIT","FOOTER_NOTE_TAGS","MESSAGE_SUCCESS_CONTAINER","DIALOGUE_CONTAINER","CONFIRM_TEXT_MULTI","CONFIRM_TEXT_SINGLE","CONFIRM_DELETE_BUTTON_MULTI","CONFIRM_DELETE_BUTTON_SINGLE","CANCEL_DELETE_BUTTON_MULTI","CANCEL_DELETE_BUTTON_SINGLE","DELETE_NOTE_BUTTON","CHECKBOX_LIST_NOTE","CHECKBOX_ALL_NOTE","TABLE_DELETE_BUTTON","NOTE_LIST_ACTIONS","SELECTED_NOTE_COUNT","CLOSE_NOTE_LIST_ACTIONS","TABLE_PAGINATION","SEEALL_CONTAINER","Events","show","root","attr","drawerRoot","getDrawerRoot","length","displayNotes","refreshNotes","previousPageNumber","this","$table","pageNumber","displayNote","noteid","promises","displayNoteView","addClass","call","methodname","args","id","done","result","data","subject","summary","createdtimestamp","created","datecreation","Date","toLocaleDateString","document","documentElement","lang","day","month","year","timecreation","toLocaleTimeString","lastmodifiedtimestamp","lastmodified","lastmodifieddate","lastmodifiedtime","render","then","html","tags","tagshtml","forEach","item","badge","url","title","removeClass","focus","fail","Notification","exception","userid","courseid","coursemoduleid","get_strings","key","component","langStrings","tableheight","querySelector","offsetHeight","each","index","value","text","push","locale","paginationParts","paginationSuccessivelySize","paginationPagesBySide","height","columns","field","checkbox","visible","sortable","sortName","formatter","nbtags","td","nbclass","tooltip","width","titleTooltip","align","row","join","onSearch","closeNoteListActions","onPostBody","displayAddNoteButton","find","slice","wrapAll","addnotebtn","clone","append","on","resetNoteForm","toggleNoteForm","hasClass","trigger","closeConfirmDialogue","action","showConfirmDialogue","toshow","list","val","hide","isVisible","contentRoot","closest","submitFormAjax","activeElement","update","service","note","serialize","displayMessageSuccess","submitDeleteAjax","notesids","keymessage","notes","hideNoteView","toggleNoteListFooter","removeAttr","stringkeys","messageHtml","setTimeout","fadeOut","toggleSaveButton","editorcontent","emptyeditor","samecontent","subjectform","subjectorigin","summaryorigin","localeCompare","replace","trim","includes","prop","toggleNoteListActions","selectednotecount","arialabel","empty","registerEventListeners","events","activate","subscribe","buttonid","Y","use","core_formchangechecker","init","formid","reset_form_dirty_state","setJumpFrom","firstInput","ROUTES_BACK","button","e","originalEvent","preventDefault","publish","target","parent","is","msdrawerRoot","keycode","event","keyCode","which","type"],"mappings":";;;;;;;;AAuBAA,QAAQC,OAAO,CACXC,eAAe,EACfC,KAAM,gBACgB,CAAC,+BACK,CAAC,SAAU,6CACL,CAAC,SAAU,mBAE7CC,MAAO,CACHC,eAAgBC,EAAEC,IAAIC,QAAU,gDAChCC,qBAAsBH,EAAEC,IAAIC,QAAU,2DACtCE,2BAA4BJ,EAAEC,IAAIC,QAAU,0DAIpDG,wCACI,CACI,SACA,iCACA,cACA,cACA,oBACA,WACA,YACA,iBACA,iBACA,uBACA,+BACD,SACCC,EACAC,aACAC,OACAC,OACAC,aACAC,IACAC,KACAC,eAGIC,UAAY,CACZC,OAAQ,yCACRC,OAAQ,6CACRC,iBAAkB,mCAClBC,eAAgB,iCAChBC,UAAW,gCACXC,aAAc,8BACdC,WAAY,kBACZC,eAAgB,yBAChBC,oBAAqB,qCACrBC,YAAa,YACbC,cAAe,mBACfC,aAAc,WACdC,UAAW,2DACXC,aAAc,+CACdC,UAAW,2DACXC,iBAAkB,6DAClBC,iBAAkB,6DAClBC,yBAA0B,oDAC1BC,+BAAgC,yDAChCC,oBAAqB,0DACrBC,oBAAqB,sDACrBC,qBAAsB,2DACtBC,eAAgB,oDAChBC,UAAW,2CACXC,mBAAoB,+CACpBC,iBAAkB,6CAClBC,iBAAkB,6CAClBC,0BAA2B,6BAC3BC,mBAAoB,wFACpBC,mBAAoB,uGAEpBC,oBAAqB,oGAErBC,4BAA6B,qFAC7BC,6BAA8B,mFAC9BC,2BAA4B,oFAC5BC,4BAA6B,kFAC7BC,mBAAoB,cACpBC,mBAAoB,wBACpBC,kBAAmB,uBACnBC,oBAAqB,yBACrBC,kBAAmB,qBACnBC,oBAAqB,0CACrBC,wBAAyB,4BACzBC,iBAAkB,qEAClBC,iBAAkB,kEAElBC,YACM,uBADNA,YAEM,uBAFNA,yBAGmB,yBASnBC,KAAQC,OACHA,KAAKC,KAAK,eACXD,KAAKC,KAAK,cAAc,OAGxBC,WAAaC,cAAcH,MAC3BE,WAAWE,SACXzD,OAAOoD,KAAKG,YAEZG,iBAQJC,aAAe,SACXC,mBAAqBC,KAAKC,OAAOvE,eAAe,cAAcwE,gBAC7DD,OAAOvE,eAAe,WAC3BmE,aAAaE,qBAsDbI,YAAeC,aACXC,SAAW,GACfC,kBApBArE,EAFgBQ,UAAUgB,iBAAmB,KAAOhB,UAAUkB,yBAA2B,KACrFlB,UAAUmB,+BAAiC,KAAMnB,UAAUe,WAClD+C,SAAS,iBAuBtBF,SAAW9D,KAAKiE,KAAK,CAAC,CAClBC,WAAY,2BACZC,KAAM,CACFN,OAAQA,SAGhB,CACIK,WAAY,6BACZC,KAAM,CACFC,GAAIP,YAGH,GAAGQ,MAAK,SAAUC,YACnBC,KAAO,GACXA,KAAKC,QAAUF,OAAOE,QACtBD,KAAKE,QAAUH,OAAOG,YAGlBC,iBAAoC,IAAjBJ,OAAOK,QAC1BC,aAAe,IAAIC,KAAKH,kBAAkBI,mBAAmBC,SAASC,gBAAgBC,KAAM,CAC5FC,IAAM,UACNC,MAAQ,QACRC,KAAO,YAEPC,aAAe,IAAIR,KAAKH,kBAAkBY,mBAAmBP,SAASC,gBAAgBC,MAGtFM,sBAA8C,IAAtBjB,OAAOkB,aAC/BC,iBAAmB,IAAIZ,KAAKU,uBAAuBT,mBAAmBC,SAASC,gBAAgBC,KAAM,CACrGC,IAAM,UACNC,MAAQ,QACRC,KAAO,YAEPM,iBAAmB,IAAIb,KAAKU,uBAAuBD,mBAAmBP,SAASC,gBAAgBC,MAEnGhF,UAAU0F,OAAO,8BAA+BpB,MAC/CqB,MAAK,SAASC,MAtFCC,IAAAA,KAChBC,SAuFIrG,EAAEQ,UAAUe,WAAW4E,KAAKA,MAE5BnG,EAAEQ,UAAUkB,0BAA0ByE,KAAKjB,aAAe,IAAMS,cAChE3F,EAAEQ,UAAUmB,gCAAgCwE,KAAKJ,iBAAmB,IAAMC,kBAE1EhG,EAAEQ,UAAUyB,oBAAoB4C,KAAK,SAAUD,OAAOF,IACtD1E,EAAEQ,UAAU0B,kBAAkB2C,KAAK,SAAUD,OAAOF,IAEpD1E,EAAEQ,UAAU2B,kBAAkBgE,MAhGlBC,KAgGwCxB,OAAOwB,KA/F/DC,SAAW,GAEfD,KAAKE,SAAQ,SAASC,UAGdC,MAAQ,aACK,MAAbD,KAAKE,KACLD,MAAQ,kBACRH,UAAY,sBAAwBG,MAAQ,gCAC1CD,KAAKG,MAAQ,WAEfL,UAAY,sBAAwBG,MAAxB,0CACSD,KAAKG,MAAQ,WAAaH,KAAKE,IAAM,KAAOF,KAAKG,MAAQ,iBAI/EL,WAoBPrG,EAFgBQ,UAAUgB,iBAAmB,KAAOhB,UAAUkB,yBAA2B,KACrFlB,UAAUmB,+BAAiC,KAAMnB,UAAUe,WAClDoF,YAAY,gBA+DjB3G,EAAEQ,UAAUc,cAAcuD,KAAK,SAAUD,OAAOF,IAChD1E,EAAEQ,UAAUc,cAAcsF,QAE1BxC,SAAS,GAAGO,MAAK,eAAgBkC,KAAKC,aAAaC,cAGtDF,KAAKC,aAAaC,cACpBF,KAAKC,aAAaC,YAQrBnD,aAAgBK,iBACZG,SAAW,GAEfA,SAAW9D,KAAKiE,KAAK,CAAC,CAClBC,WAAY,4BACZC,KAAM,CACFuC,OAAQjD,KAAKiD,OACbC,SAAUlD,KAAKkD,SACfC,eAAgBnD,KAAKmD,mBAuB7B7G,IAAI8G,YApBa,CACb,CACIC,IAAK,YACLC,UAAW,kBAEf,CACID,IAAK,WACLC,UAAW,kBAEf,CACID,IAAK,cACLC,UAAW,kBAEf,CACID,IAAK,mBACLC,UAAW,oBAKSnB,MAAK,SAASoB,iBAElCC,YADiBlC,SAASmC,cAAc,wBACXC,aAE7B5C,KAAO,GACXT,SAAS,GAAGO,MAAK,SAAUC,QACvB5E,EAAE0H,KAAK9C,QAAQ,SAAU+C,MAAOC,WACxB9C,QAAU,GACdA,QAAQ+C,KAAOD,MAAM9C,QACrBA,QAAQsB,KAAOwB,MAAMxB,KACrBvB,KAAKiD,KAAK,IACAF,MAAMlD,eACGkD,MAAM9C,gBACVA,qBACK8C,MAAM9B,uBAGzB9B,OAAOvE,eAAe,CACvBsI,OAAQ1C,SAASC,gBAAgBC,KACjCyC,gBAAiB,CAAC,WAAY,YAC9BC,2BAA4B,EAC5BC,sBAAuB,EACvBrD,KAAMA,KACNsD,OAAQZ,YACRtD,WAAYA,WACZmE,QAAS,CACL,CAAC,CACGC,MAAO,QACPC,UAAU,GAEd,CACID,MAAO,cACPE,SAAS,GAEb,CACIF,MAAO,UACP3B,MAAOY,YAAY,GACnBkB,UAAU,EACVC,SAAU,cACVC,UAAW,SAASd,WACZe,OAASf,MAAMxB,KAAKzC,WACpBiF,GAAK,uCAAyChB,MAAMC,KAAO,cAC3DgB,QAAqB,IAAXF,OAAe,QAAU,eACvCf,MAAMxB,KAAKE,SAAQ,SAASC,UAGpBC,MAAQ,aACK,MAAbD,KAAKE,KACLD,MAAQ,kBACRoC,IAAM,sBAAwBpC,MAAQ,+BAAiCqC,QACrE,YAActC,KAAKuC,QAAU,KAAOvC,KAAKG,MAAQ,WAEnDkC,IAAM,sBAAwBpC,MAAQ,+BAAiCqC,QACjE,eAAiBtC,KAAKuC,QAAU,WAAavC,KAAKE,IAAM,KACxDF,KAAKG,MAAQ,iBAGpBkC,KAGf,CACIP,MAAO,eACP3B,MAAOY,YAAY,GACnBkB,UAAU,EACVE,UAAW,SAASd,cACJ,IAAIzC,KAAa,IAARyC,OAAcxC,mBAAmBC,SAASC,gBAAgBC,KAAM,CACjFC,IAAM,UACNC,MAAQ,QACRC,KAAO,aAIfqD,MAAO,IACPC,aAAc1B,YAAY,IAE9B,CACIe,MAAO,UACP3B,MAAO,GACPuC,MAAO,SACPF,MAAO,GACPL,UAAW,SAASd,MAAOsB,WAChB,CACH,oCAAsCA,IAAIxE,GAAK,qBAAuB4C,YAAY,GAAK,KACvF,yDACA,QACF6B,KAAK,QAInBC,SAAU,WACNC,wBAEJC,WAAY,WACRC,uBAEAvJ,EAAE,eAAe0H,MAAK,WAClB1H,EAAE+D,MAAMyF,KAAK,cAAcC,MAAM,EAAG,GAAGC,QAAQ,yCAI5D7C,KAAKzG,aAAa2G,cACtBF,KAAKC,aAAaC,YAOrBwC,qBAAuB,SAClBvJ,EAAEQ,UAAUsB,sBAAsB0H,KAAK,mCAAmC7F,OAAQ,KAC/EgG,WAAa3J,EAAEQ,UAAUS,qBAAqB2I,QAAQjD,YAAY,UACtE3G,EAAEQ,UAAUsB,sBAAsB0H,KAAK,0BAA0BK,OAAOF,YAGxEA,WAAWG,GAAG,SAAS,WACnB9J,EAAEQ,UAAUE,QAAQiG,YAAY,QAAQrC,SAAS,OACjDyF,gBACAC,eAAe,QACfX,4BAQRA,qBAAuB,KACnBrJ,EAAEQ,UAAUwC,mBAAmBiH,SAAS,WACxCjK,EAAEQ,UAAU0C,yBAAyBgH,QAAQ,UAUjDC,qBAAuB,CAACC,OAAQxD,SAChC5G,EAAEQ,UAAU6B,oBAAoBiC,SAAS,UACpCsC,QAGU,aAAXwD,OACApK,EAAEQ,UAAUuC,qBAAqB6D,QAEjC5G,EAAEQ,UAAUoC,oBAAoBgE,UASpCyD,oBAAuBD,YACvBpK,EAAEQ,UAAU6B,oBAAoBsE,YAAY,UAC7B,aAAXyD,OAAuB,KACnBE,OAAS9J,UAAU8B,mBAAqB,KAAO9B,UAAUgC,4BAA8B,IACvFhC,UAAUkC,2BAGd1C,EAFaQ,UAAU+B,oBAAsB,KAAO/B,UAAUiC,6BAA+B,IACzFjC,UAAUmC,6BACJ2B,SAAS,UACnBtE,EAAEsK,QAAQ3D,YAAY,cAClB4D,KAAO,GACXvK,EAAEQ,UAAUE,OAAS,IAAMF,UAAUqC,mBAAqB,YAAY6E,MAAK,WACvE6C,KAAKzC,KAAK9H,EAAE+D,MAAMyG,UAEtBxK,EAAEQ,UAAUgC,6BAA6BqC,KAAK,SAAU0F,MACxDvK,EAAEQ,UAAUgC,6BAA6BoE,YACtC,KAGC0D,OAAS9J,UAAU+B,oBAAsB,KAAO/B,UAAUiC,6BAA+B,IACzFjC,UAAUmC,4BACd3C,EAJaQ,UAAU8B,mBAAqB,KAAO9B,UAAUgC,4BAA8B,IACvFhC,UAAUkC,4BAGJ4B,SAAS,UACnBtE,EAAEsK,QAAQ3D,YAAY,UACtB3G,EAAEQ,UAAUiC,8BAA8BoC,KAAK,SAC/C7E,EAAEQ,UAAUyB,oBAAoB4C,KAAK,WACrC7E,EAAEQ,UAAUiC,8BAA8BmE,UAS9C6D,KAAQlH,WACJE,WAAaC,cAAcH,MAC3BE,WAAWE,QACXzD,OAAOuK,KAAKhH,aAUhBiH,UAAanH,WACTE,WAAaC,cAAcH,aAC3BE,WAAWE,QACJzD,OAAOwK,UAAUjH,aAoB5BC,cAAiBiH,cACjBA,YAAc3K,EAAE2K,cACGC,QAAQ,8CAO3BC,eAAiB,QAC+B,SAA5C7K,EAAEqF,SAASyF,eAAejG,KAAK,UAC/BkF,oBACG,KACCtF,KAAO,GACPsG,QAAS,EACTC,QAAU,0BACV7G,OAASnE,EAAEQ,UAAUwB,UAAW,yBAAyBwI,MAC9C,MAAXrG,QACA4G,QAAS,EACTC,QAAU,6BACVvG,KAAKN,OAASA,SAEdM,KAAKuC,OAASjD,KAAKiD,OACnBvC,KAAKwC,SAAWlD,KAAKkD,SACrBxC,KAAKyC,eAAiBnD,KAAKmD,gBAE/BzC,KAAKK,QAAU9E,EAAEQ,UAAUwB,UAAW,0BAA0BwI,MAChE/F,KAAKwG,KAAOjL,EAAEQ,UAAUwB,WAAWkJ,YACnC5K,KAAKiE,KAAK,CAAC,CACPC,WAAYwG,QACZvG,KAAMA,KACNE,KAAM,SAASC,WACPA,OAAQ,KACJT,OAASM,KAAKN,OACb4G,QAwBDhB,gBAEAoB,sBAAsB,aAEtBtH,iBA3BAM,OAASS,cACFH,KAAKK,eACLL,KAAKwG,YACLxG,KAAKN,OACZ7D,KAAKiE,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAMA,KACNE,KAAM,SAASG,SACPA,UAEA9E,EAAEQ,UAAUwB,UAAW,gCAAgCwI,IAAI1F,SAE3DiF,gBAEAoB,sBAAsB,aAEtBtH,iBAGRgD,KAAMzG,aAAa2G,cAY3B7C,YAAYC,UAGpB0C,KAAMzG,aAAa2G,oBAGpB,GAOPqE,iBAAmB,SACfhB,OAASpK,EAAEqF,SAASyF,eAAejG,KAAK,UACxCwG,SAAW,GACXC,WAAa,oBACF,4BAAXlB,QACAiB,SAAWrL,EAAEqF,SAASyF,eAAejG,KAAK,UAC1CyG,WAAa,uBAEbD,SAASvD,KAAK9H,EAAEqF,SAASyF,eAAejG,KAAK,WAEjDvE,KAAKiE,KAAK,CAAC,CACPC,WAAY,8BACZC,KAAM,CAAC8G,MAAOF,UACd1G,KAAM,SAASC,QACPA,SAEAuF,qBAAqB,YAAY,GAClB,0BAAXC,SACAJ,eAAe,QACfwB,cAAa,IAGjBL,sBAAsBG,YAGP,4BAAXlB,SACApK,EAAEQ,UAAUwC,mBAAmBsB,SAAS,UACxCmH,qBAAqB,SAIzBzL,EAAEQ,UAAUE,QAAQiG,YAAY,QAAQrC,SAAS,QAGjDT,iBAGRgD,KAAMzG,aAAa2G,cAEhB,GAOPgD,cAAgB,KAChB/J,EAAEQ,UAAUwB,UAAW,0BAA0BwI,IAAIxK,EAAEQ,UAAUwB,UAAW,gCAAgCwI,OAC5GxK,EAAEQ,UAAUwB,UAAY,aAAawI,IAAI,IACzCxK,EAAEQ,UAAUI,eAAgB,qBAAqBuF,KAAK,IACtDnG,EAAEQ,UAAUwB,UAAY,aAAakI,QAAQ,UAC7ClK,EAAEQ,UAAUwB,UAAW,yBAAyBwI,IAAI,GAEpDxK,EAAEQ,UAAU4B,2BAA2B+D,KAAK,KAS5CqF,aAAgB5E,QAChB5G,EAAEQ,UAAUiB,kBAAkB6C,SAAS,UACvCtE,EAAEQ,UAAUiB,kBAAkB+B,KAAK,eAAe,GAClDxD,EAAEQ,UAAUgB,kBAAkB8C,SAAS,UACvCtE,EAAEQ,UAAUgB,kBAAkBgC,KAAK,eAAe,GAClDxD,EAAEQ,UAAUe,WAAW+C,SAAS,UAChCtE,EAAEQ,UAAUe,WAAWiC,KAAK,eAAe,GAC3CxD,EAAEQ,UAAUK,WAAW8F,YAAY,UACnC3G,EAAEQ,UAAUK,WAAW6K,WAAW,eAE7B9E,OAGL5G,EAAE4G,OAAOA,SAMTvC,gBAAkB,KAClBrE,EAAEQ,UAAUE,QAAQiG,YAAY,iBAAiBrC,SAAS,QAC1DtE,EAAEQ,UAAUiB,kBAAkBkF,YAAY,UAC1C3G,EAAEQ,UAAUiB,kBAAkBiK,WAAW,eACzC1L,EAAEQ,UAAUgB,kBAAkBmF,YAAY,UAC1C3G,EAAEQ,UAAUgB,kBAAkBkK,WAAW,eACzC1L,EAAEQ,UAAUe,WAAWoF,YAAY,UACnC3G,EAAEQ,UAAUe,WAAWmK,WAAW,eAClC1L,EAAEQ,UAAUK,WAAWyD,SAAS,UAChCtE,EAAEQ,UAAUK,WAAW2C,KAAK,eAAe,GAC3CxD,EAAEQ,UAAUsB,sBAAsBwC,SAAS,WAQ1C0F,eAAkBI,SACJ,SAAXA,QACApK,EAAEQ,UAAUqB,qBAAqB8E,YAAY,SAC7C3G,EAAEQ,UAAUsB,sBAAsBwC,SAAS,UAC3CtE,EAAEQ,UAAUoB,qBAAqB+E,YAAY,YAE7C3G,EAAEQ,UAAUqB,qBAAqByC,SAAS,SAC1CtE,EAAEQ,UAAUsB,sBAAsB6E,YAAY,UAC9C3G,EAAEQ,UAAUoB,qBAAqB0C,SAAS,YAqC9C6G,sBAAyB/D,MAEzBpH,EAAEQ,UAAU4B,2BAA2B+D,KAAK,QACxCwF,WAAa,CACb,CACIvE,IAAKA,IACLC,UAAW,kBAEf,CACID,IAAK,QACLC,UAAW,SAInBhH,IAAI8G,YAAYwE,YAAYzF,MAAK,SAASoB,iBAClCsE,YAAc,2IACwDtE,YAAY,GAAK,eAC3FA,YAAY,GAAK,SACjBtH,EAAEQ,UAAU4B,2BAA2B+D,KAAKyF,aAC5C5L,EAAEQ,UAAU4B,0BAA4B,kBAAkBwE,QAC1DiF,YAAW,WACP7L,EAAEQ,UAAU4B,0BAA4B,WAAW0J,YACpD,SAQPC,iBAAmB,SACfC,cAAgBhM,EAAEQ,UAAUI,eAAgB,qBAAqBuF,OACjE8F,aAAc,EAEdC,aAAc,KACH,MAFFlM,EAAEQ,UAAUwB,UAAW,yBAAyBwI,MAEzC,KACZ2B,YAAcnM,EAAEQ,UAAUwB,UAAY,uBAAuBwI,MAC7D4B,cAAgBpM,EAAEQ,UAAUE,OAAS,eAAeyF,OACpDkG,cAAgBrM,EAAEQ,UAAUE,OAAS,iBAAiByF,OACT,IAA7CgG,YAAYG,cAAcF,gBAAuE,IAA/CJ,cAAcM,cAAcD,iBAC9EH,aAAc,GAGyC,IAA3DF,cAAcO,QAAQ,cAAe,IAAIC,OAAO7I,QAAiBqI,cAAcS,SAAS,UACxFR,aAAc,GAE0C,IAAxDjM,EAAEQ,UAAUwB,UAAY,uBAAuBwI,OAAeyB,aAAeC,YAC7ElM,EAAEQ,UAAUwB,UAAY,IAAMxB,UAAUU,aAAawL,KAAK,YAAY,GAEtE1M,EAAEQ,UAAUwB,UAAY,IAAMxB,UAAUU,aAAawL,KAAK,YAAY,IASzEjB,qBAAwBrB,SACV,SAAXA,QACApK,EAAEQ,UAAU2C,kBAAkBmB,SAAS,aACvCtE,EAAEQ,UAAU4C,kBAAkBkB,SAAS,eAEvCtE,EAAEQ,UAAU2C,kBAAkBwD,YAAY,aAC1C3G,EAAEQ,UAAU4C,kBAAkBuD,YAAY,eAQ9CgG,sBAAwB,SACpBC,kBAAoB5M,EAAEQ,UAAUE,OAAS,IAAMF,UAAUqC,mBAAqB,YAAYc,UAE1FiJ,kBAAmB,KACfC,UAAYD,kBAAoB,IAAM5M,EAAEQ,UAAUyC,qBAAqBO,KAAK,kBAChFxD,EAAEQ,UAAU4B,2BAA2B0K,QACvC9M,EAAEQ,UAAUyC,qBAAqB4E,KAAK+E,mBACtC5M,EAAEQ,UAAUyC,qBAAqBO,KAAK,aAAcqJ,WACpDpB,qBAAqB,QACrBzL,EAAEQ,UAAUwC,mBAAmB2D,YAAY,eAE3C8E,qBAAqB,QACrBzL,EAAEQ,UAAUwC,mBAAmBsB,SAAS,WAY5CyI,uBAAyB,CAACxJ,KAAMyD,OAAQC,SAAUC,uBAC7CF,OAASA,YACTC,SAAWA,cACXC,eAAiBA,oBACjBlD,OAAShE,EAAEQ,UAAUO,YAC1Bf,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUQ,gBAAgB,WACtD6C,kBAEJ5D,aAAaF,OAAOwD,KAAM,CAACtD,aAAa+M,OAAOC,WAC/C9M,OAAO+M,UAAU7J,aAAa,WAC1BC,KAAKC,SAGTpD,OAAO+M,UAAU7J,aAAa,WAC1BoH,KAAKlH,SAGTpD,OAAO+M,UAAU7J,0BAA0B,SAAU8J,UAC7CzC,UAAUnH,OACVkH,KAAKlH,MACLvD,EAAEQ,UAAUC,QAAQ+C,KAAK,YAAa,GAEtC4J,EAAEC,IAAI,iCAAiC,WACnC3N,EAAE4N,uBAAuBC,KAAK,CAACC,OAAQhN,UAAUY,kBAErDgM,EAAEC,IAAI,iCAAiC,WACnC3N,EAAE4N,uBAAuBG,8BAG7BnK,KAAKC,MAtWE4J,CAAAA,WACfnN,EAAEQ,UAAUE,QAAQ8C,KAAK,cAAe2J,WAsWhCO,CAAYP,UACZnN,EAAEQ,UAAUC,QAAQ+C,KAAK,WAAY,OAI7CxD,EAAEQ,UAAUC,QAAQqJ,GAAG,SAAS,eACxB6D,WAAapK,KAAKiG,KAAKhJ,UAAUM,cACjC6M,WAAWhK,OACXgK,WAAW/G,QAEX5G,EAAEQ,UAAUG,kBAAkB6I,KAAKhJ,UAAUoN,aAAahH,WAIlE5G,EAAEQ,UAAUE,QAAQkG,OAAM,eAClBiH,OAAS7N,EAAE+D,MAAMP,KAAK,eACtBqK,QACA7N,EAAE,IAAM6N,QAAQjH,WAINrD,KAAKiG,KAAKhJ,UAAUM,cAC1BgJ,GAAG7J,aAAa+M,OAAOC,UAAU,SAASa,EAAGjJ,MACrDA,KAAKkJ,cAAcC,qBACfH,OAAS7N,EAAEQ,UAAUE,QAAQ8C,KAAK,eAClCqK,QACA7N,EAAE,IAAM6N,QAAQjH,QAEpBzG,OAAO8N,QAAQ5K,6BAInBrD,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUc,cAAc,WACpD0I,eAAe,QACfwB,aAAahL,UAAUa,UAAY,iBAAmBrB,EAAE+D,MAAMc,KAAK,UAAY,MAC/E7E,EAAEQ,UAAUE,QAAQiG,YAAY,QAAQrC,SAAS,WAIrDtE,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUuB,eAAiB,yBAAyB,SAAS+L,OACpF9N,EAAE8N,EAAEI,QAAQjE,SAAS,kBACrBjK,EAAE8N,EAAEI,QAAQC,SAASlE,SAAS,gBAAiB,KAC5C9F,OAASnE,EAAE+D,MAAM6G,QAAQ,MAAMpB,KAAK,aAAa3E,KAAK,UAC1DX,YAAYC,QACZkF,2BAIRrJ,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUuB,eAAiB,mBAAmB,SAAS+L,MAChF9N,EAAE+D,MAAMyF,KAAK,eAAe7F,YACtB3D,EAAE8N,EAAEI,QAAQE,GAAG,kBACfpO,EAAE8N,EAAEI,QAAQjE,SAAS,kBACrBjK,EAAE8N,EAAEI,QAAQC,SAASlE,SAAS,gBAAiB,KAC5C9F,OAASnE,EAAE+D,MAAM6G,QAAQ,MAAMpB,KAAK,aAAa3E,KAAK,UAC1DX,YAAYC,QACZkF,6BAGJrJ,EAAE+D,MAAMyF,KAAK,0BAA0BU,QAAQ,YAIvDlK,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAU0B,kBAAkB,WAxN5CiC,IAAAA,OAAAA,OAyNCnE,EAAE+D,MAAMc,KAAK,UAxN9BvE,KAAKiE,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,CAACN,OAAQA,QACfQ,KAAM,SAASC,QACPA,SACA5E,EAAEQ,UAAUE,QAAQiG,YAAY,QAAQrC,SAAS,QACjDtE,EAAEQ,UAAUI,eAAgB,qBAAqBuF,KAAKvB,OAAOG,SAC7D/E,EAAEQ,UAAUwB,UAAY,aAAawI,IAAIxK,EAAEQ,UAAUe,UAAY,oBAAoBiJ,OACrFxK,EAAEQ,UAAUwB,UAAY,aAAakI,QAAQ,UAC7ClK,EAAEQ,UAAUwB,UAAW,0BAA0BwI,IAAI5F,OAAOE,SAC5D9E,EAAEQ,UAAUwB,UAAW,yBAAyBwI,IAAIrG,QACpDqH,aAAahL,UAAUwB,UAAW,0BAClC+J,mBACA/B,eAAe,QACfhK,EAAEQ,UAAUE,QAAQiG,YAAY,QAAQrC,SAAS,UAGzDuC,KAAMzG,aAAa2G,gBA0MvB/G,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUW,eAAe,SAAS2M,MAC9DA,EAAEE,iBACChO,EAAEQ,UAAUE,QAAQuJ,SAAS,QAAS,KACjC9F,OAASnE,EAAEQ,UAAU0B,kBAAkB2C,KAAK,UAChDX,YAAYC,aAEZ6F,eAAe,QACfhK,EAAEQ,UAAUE,QAAQiG,YAAY,OAAOrC,SAAS,WAIxDtE,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUmC,6BAA6B,WACnEwH,qBAAqB,UAAU,MAEnCnK,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUkC,4BAA4B,WAClEyH,qBAAqB,YAAY,MAGrCnK,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUoC,oBAAoB,eACtDwH,OAAS,WACTpK,EAAE+D,MAAMc,KAAK,YACbuF,OAAS,UAEbC,oBAAoBD,WAGxBpK,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAUiC,6BAA+B,MAAQjC,UAAUgC,4BAC3E4I,sBAEZiD,aAAenO,OAAOwD,cAAc1D,EAAE,mCACrBA,EAAE,kCACR8J,GAAG,0BAA0B,eACpCwE,QAAWC,MAAMC,QAAUD,MAAMC,QAAUD,MAAME,MAEtC,MAAXH,SAA8B,MAAXA,SAAiC,SAAdC,MAAMG,MACxCxO,OAAOwK,UAAU2D,eAAiB3D,UAAUnH,OAC5CkH,KAAKlH,SAKjBvD,EAAEQ,UAAUI,gBAAgBkJ,GAAG,SAAU,OAAQe,gBAGjDkB,mBACA/L,EAAEQ,UAAUI,eAAiB,4BAA4BkJ,GAAG,QAASiC,kBACrE/L,EAAEQ,UAAUI,eAAiB,kBAAkBkJ,GAAG,SAAUiC,kBAE5D/L,EAAEQ,UAAUE,QAAQoJ,GAAG,SAAUtJ,UAAUqC,mBAAqB,KAAOrC,UAAUsC,kBACjE6J,uBAGhB3M,EAAEQ,UAAUE,QAAQoJ,GAAG,QAAStJ,UAAU0C,yBAAyB,WAC/DlD,EAAEQ,UAAUsC,mBAAmB4J,KAAK,WAAW,GAAOxC,QAAQ,SAC9DuB,qBAAqB,kBAiBtB,CACH8B,KANO,CAAChK,KAAMyD,OAAQC,SAAUC,kBAChC3D,KAAOvD,EAAEuD,MACTwJ,uBAAuBxJ,KAAMyD,OAAQC,SAAUC"}