{"version":3,"file":"notebook_index.min.js","sources":["../src/notebook_index.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the notebook index.\n *\n * @module     local_notebook/notebook_index\n * @copyright  2022 Université de Montréal\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nrequire.config({\n    enforceDefine: true,\n    shim: {\n        'bootstrapTable': ['jquery'],\n        'bootstrapTableLocale': ['jquery', 'bootstrapTable'],\n        'bootstrapTableLocaleMobile': ['jquery', 'bootstrapTable']\n    },\n    paths: {\n        bootstrapTable: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table.min',\n        bootstrapTableLocale: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table-locale-all.min',\n        bootstrapTableLocaleMobile: M.cfg.wwwroot + '/local/notebook/amd/build/bootstrap-table-mobile.min'\n    }\n});\n\ndefine(\n    [\n        'jquery',\n        'core/notification',\n        'core/str',\n        'core/ajax',\n        'core/templates',\n        'bootstrapTable',\n        'bootstrapTableLocale',\n        'bootstrapTableLocaleMobile',\n    ], function(\n        $,\n        notification,\n        str,\n        ajax,\n        Templates\n    ) {\n\n    var SELECTORS = {\n        NOTEBOOKCONTAINER: '.notebookcontainer',\n        NOTEINDEX: '[data-region=\"notebook-index\"]',\n        HEADER_CONTAINER: '[data-region=\"header-container\"]',\n        BODY_CONTAINER: '[data-region=\"body-container\"]',\n        FORM_CONTAINER: '[data-region=\"form-note\"]',\n        CLOSE_BUTTON: '[data-action=\"closedrawer\"]',\n        NOTE_TABLE_CONTAINER: '#notebook-table-index-container',\n        NOTE_TABLE: '#notebook-table-index',\n        NOTE_TABLE_LOADING: '#notebook-table-index-loading',\n        REFRESH_BUTTON: 'button[name=\"refresh\"]',\n        SAVE_BUTTON: '#savenote',\n        CANCEL_BUTTON: '#cancel-add-edit',\n        NOTE_FORM_ID: 'noteform',\n        NOTE_SUMMARY: '#id_notebook_editor',\n        VIEW_NOTE: '#notebook-table-index .viewnote',\n        NOTE_VIEW: '[data-region=\"notebook-index\"] .view-note',\n        NOTE_TABLE_ROW: '#notebook-table-index tr',\n        FOOTER_NOTE_VIEW: '[data-region=\"footer-container\"] [data-region=\"view-note\"]',\n        HEADER_NOTE_VIEW: '[data-region=\"header-container\"] [data-region=\"view-note\"]',\n        HEADER_NOTE_CREATED_DATE: '[data-region=\"header-container\"] .notecreateddate',\n        HEADER_NOTE_LAST_MODIFIED_DATE: '[data-region=\"header-container\"] .notelastmodifieddate',\n        NOTE_FORM: '[data-region=\"form-note\"] #noteform',\n        HEADER_NOTE_DELETE: '[data-region=\"header-container\"] .deletenote',\n        HEADER_NOTE_EDIT: '[data-region=\"header-container\"] .editnote',\n        FOOTER_NOTE_TAGS: '[data-region=\"footer-container\"] .notetags',\n        MESSAGE_SUCCESS_CONTAINER: '.notebookcontainer .messagesuccesscontainer',\n        DIALOGUE_CONTAINER: '.notebookcontainer [data-region=\"confirm-dialogue-container\"]',\n        CONFIRM_TEXT_MULTI: '.notebookcontainer [data-region=\"confirm-dialogue-container\"] ' +\n            '.multiplenotes',\n        CONFIRM_TEXT_SINGLE: '.notebookcontainer [data-region=\"confirm-dialogue-container\"] ' +\n            '.singlenote',\n        CONFIRM_DELETE_BUTTON_MULTI: '[data-region=\"confirm-dialogue-container\"] [data-action=\"confirm-delete-multiple\"]',\n        CONFIRM_DELETE_BUTTON_SINGLE: '[data-region=\"confirm-dialogue-container\"] [data-action=\"confirm-delete-single\"]',\n        CANCEL_DELETE_BUTTON_MULTI: '[data-region=\"confirm-dialogue-container\"] [data-action=\"cancel-delete-multiple\"]',\n        CANCEL_DELETE_BUTTON_SINGLE: '[data-region=\"confirm-dialogue-container\"] [data-action=\"cancel-delete-single\"]',\n        DELETE_NOTE_BUTTON: '.deletenote',\n        CHECKBOX_LIST_NOTE: '[name=\"btSelectItem\"]',\n        CHECKBOX_ALL_NOTE: '[name=\"btSelectAll\"]',\n        TABLE_DELETE_BUTTON: '[data-region=\"notebook-index\"] #remove',\n        TABLE_PAGINATION: '[data-region=\"notebook-index\"] .fixed-table-pagination',\n        NOTE_DETAIL_CONTAINER: '#notedetailcontainer'\n\n    };\n    /** Editor listeners state */\n    var editorListenersInitialized = false;\n\n    /**\n     * Refresh notes.\n     *\n     */\n    var refreshNotes = () => {\n        let previousPageNumber = this.$table.bootstrapTable('getOptions').pageNumber;\n        this.$table.bootstrapTable('destroy');\n        displayNotes(previousPageNumber);\n    };\n\n    /**\n     * Get formatted tags.\n     *\n     * @param {Array.<Object>} tags\n     * @return {String} return tags html\n     */\n    var getFormattedTags = (tags) => {\n        var tagshtml = '';\n\n        tags.forEach(function(item) {\n            // TODO: Replace with mustache rendering.\n            // If item has a # it means course or activity has been deleted.\n            let badge = 'badge-info badge-pill';\n            if (item.url === '#') {\n                badge = 'badge-secondary';\n                tagshtml += '<span class=\"badge ' + badge + ' text-truncate context-note\" title=\"' + item.tooltip + '\">'\n                    + item.title + '</span>';\n            } else {\n                tagshtml += '<span class=\"badge ' + badge + ' text-truncate context-note\">'\n                    + '<a title=\"' + item.tooltip + '\" href=\"' + item.url + '\">' + item.title + '</a></span>';\n            }\n        });\n\n        return tagshtml;\n    };\n\n    /**\n     * Add blur note content.\n     *\n     */\n    var addBlurContent = () => {\n        let selectors = SELECTORS.FOOTER_NOTE_VIEW + ', ' + SELECTORS.HEADER_NOTE_CREATED_DATE + ', ' +\n            SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE + ', ' + SELECTORS.NOTE_VIEW;\n        $(selectors).addClass('blur-content');\n    };\n\n    /**\n     * Remove blur note content.\n     *\n     */\n    var removeBlurContent = () => {\n        let selectors = SELECTORS.FOOTER_NOTE_VIEW + ', ' + SELECTORS.HEADER_NOTE_CREATED_DATE + ', ' +\n            SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE + ', ' + SELECTORS.NOTE_VIEW;\n        $(selectors).removeClass('blur-content');\n    };\n\n    /**\n     * Display note.\n     *\n     * @param {String} noteid The note id\n     */\n    var displayNote = (noteid) => {\n        var promises = [];\n        displayNoteView();\n        addBlurContent();\n\n        promises = ajax.call([{\n            methodname: 'local_notebook_read_note',\n            args: {\n                noteid: noteid\n            }\n        },\n        {\n            methodname: 'local_notebook_note_viewed',\n            args: {\n                id: noteid\n            }\n        }]);\n        promises[0].done(function(result) {\n            let data = {};\n            data.subject = result.subject;\n            data.summary = result.summary;\n\n            // Note created datetime.\n            let timestamp = result.created * 1000;\n            let datecreation = new Date(timestamp).toLocaleDateString(document.documentElement.lang, {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n            });\n            let timecreation = new Date(timestamp).toLocaleTimeString(document.documentElement.lang);\n\n            // Note last modified datetime.\n            let lastmodifiedtimestamp = result.lastmodified * 1000;\n            let lastmodifieddate = new Date(lastmodifiedtimestamp).toLocaleDateString(document.documentElement.lang, {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n            });\n            let lastmodifiedtime = new Date(lastmodifiedtimestamp).toLocaleTimeString(document.documentElement.lang);\n            Templates.render('local_notebook/note_content', data)\n                .then(function(html) {\n                    // Display content.\n                    $(SELECTORS.NOTE_VIEW).html(html);\n                    // Display dates.\n                    $(SELECTORS.HEADER_NOTE_CREATED_DATE).html(datecreation + ' ' + timecreation);\n                    $(SELECTORS.HEADER_NOTE_LAST_MODIFIED_DATE).html(lastmodifieddate + ' ' + lastmodifiedtime);\n                    // Set buttons.\n                    $(SELECTORS.HEADER_NOTE_DELETE).data('noteid', result.id);\n                    $(SELECTORS.HEADER_NOTE_EDIT).data('noteid', result.id);\n                    // Set tags.\n                    $(SELECTORS.FOOTER_NOTE_TAGS).html(getFormattedTags(result.tags));\n                    // Remove blur content.\n                    removeBlurContent();\n                    // Log viewed event.\n                    return promises[1].done(function() { }).fail(Notification.exception);\n                })\n\n                .fail(Notification.exception);\n        }).fail(Notification.exception);\n    };\n\n\n    /**\n     * Display notes.\n     *\n     * @param {Number} pageNumber The pagination page number\n     */\n    var displayNotes = (pageNumber) => {\n        var promises = [];\n\n        promises = ajax.call([{\n            methodname: 'local_notebook_notes_list',\n            args: {\n                userid: this.userid,\n                courseid: this.courseid,\n                coursemoduleid: this.coursemoduleid\n            }\n        }]);\n        var stringkeys = [\n            {\n                key: 'notetitle',\n                component: 'local_notebook'\n            },\n            {\n                key: 'notedate',\n                component: 'local_notebook',\n            },\n            {\n                key: 'displaynote',\n                component: 'local_notebook',\n            },\n            {\n                key: 'lastmodifieddate',\n                component: 'local_notebook',\n            }\n        ];\n\n        // eslint-disable-next-line promise/always-return\n        str.get_strings(stringkeys).then(function(langStrings) {\n            let data = [];\n            promises[0].done(function(result) {\n                $.each(result, function(index, value) {\n                    let subject = {};\n                    subject.text = value.subject;\n                    subject.tags = value.tags;\n                    data.push({\n                        'id': value.id,\n                        'subjecttext': value.subject,\n                        'subject': subject,\n                        'lastmodified': value.lastmodified\n                    });\n                });\n                this.$table.bootstrapTable({\n                    locale: document.documentElement.lang,\n                    paginationParts: ['pageInfo', 'pageSize', 'pageList'],\n                    paginationSuccessivelySize: 2,\n                    paginationPagesBySide: 1,\n                    data: data,\n                    pageNumber: pageNumber,\n                    columns: [\n                        [{\n                            field: 'state',\n                            checkbox: true\n                        },\n                        {\n                            field: 'subjecttext',\n                            visible: false\n                        },\n                        {\n                            field: 'subject',\n                            title: langStrings[0],\n                            sortable: true,\n                            sortName: 'subjecttext',\n                            formatter: function(value) {\n                                let nbtags = value.tags.length;\n                                var td = \"<span class='text-truncate subject'>\" + value.text + \"</span><br>\";\n                                var nbclass = nbtags === 1 ? 'wcn-1' : 'wcn-2';\n                                value.tags.forEach(function(item) {\n                                    // TODO: Replace with mustache rendering.\n                                    // If item has a # it means course or activity has been deleted.\n                                    let badge = 'badge-info badge-pill';\n                                    if (item.url === '#') {\n                                        badge = 'badge-secondary';\n                                        td += '<span class=\"badge ' + badge + ' text-truncate context-note ' + nbclass\n                                            + '\" title=\"' + item.tooltip + '\">' + item.title + '</span>';\n                                    } else {\n                                        td += '<span class=\"badge ' + badge + ' text-truncate context-note ' + nbclass\n                                            + '\"><a title=\"' + item.tooltip + '\" href=\"' + item.url + '\">'\n                                            + item.title + '</a></span>';\n                                    }\n                                });\n                                return td;\n                            }\n                        },\n                        {\n                            field: 'lastmodified',\n                            title: langStrings[1],\n                            sortable: true,\n                            formatter: function(value) {\n                                var today = new Date(value * 1000).toLocaleDateString(document.documentElement.lang, {\n                                    day: 'numeric',\n                                    month: 'short',\n                                    year: 'numeric'\n                                });\n                                return today;\n                            },\n                            width: 110,\n                            titleTooltip: langStrings[3]\n                        },\n                        {\n                            field: 'operate',\n                            title: '',\n                            align: 'center',\n                            width: 35,\n                            formatter: function(value, row) {\n                                return [\n                                    '<a class=\"viewnote\" data-noteid=\"' + row.id + '\" ' +\n                                    'href=\"#notedetailcontainer\" title=\"' + langStrings[2] + '\">',\n                                    '<i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>',\n                                    '</a>'\n                                ].join('');\n                            }\n                        }]\n                    ],\n                    onPostBody: function() {\n                        // Wrap the second and the third card view for Flexbox.\n                        $(\".card-views\").each(function() {\n                            $(this).find('.card-view').slice(1, 3).wrapAll('<div class=\"item-content\" />');\n                        });\n                        // Hide notebook table loading.\n                        $(SELECTORS.NOTE_TABLE_LOADING).addClass('hidden');\n                        // Display notebook table.\n                        $(SELECTORS.NOTE_TABLE_CONTAINER).removeClass('hidden');\n                        // Init pagination rows per page dropdown.\n                        $(SELECTORS.TABLE_PAGINATION + ' .dropdown-toggle').dropdown();\n                    }\n                });\n            }).fail(notification.exception);\n        }).fail(Notification.exception);\n    };\n\n    /**\n     * Close the confirm delete dialogue..\n     *\n     * @param {String} action The action type of cancel.\n     * @param {Boolean} focus\n     */\n    var closeConfirmDialogue = (action, focus) => {\n        $(SELECTORS.DIALOGUE_CONTAINER).addClass('hidden');\n        if (!focus) {\n            return;\n        }\n        if (action === 'multiple') {\n            $(SELECTORS.TABLE_DELETE_BUTTON).focus();\n        } else {\n            $(SELECTORS.DELETE_NOTE_BUTTON).focus();\n        }\n    };\n\n    /**\n     * Show the confirm delete dialogue..\n     *\n     * @param {String} action\n     */\n    var showConfirmDialogue = (action) => {\n        $(SELECTORS.DIALOGUE_CONTAINER).removeClass('hidden');\n        if (action === 'multiple') {\n            let toshow = SELECTORS.CONFIRM_TEXT_MULTI + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_MULTI;\n            let tohide = SELECTORS.CONFIRM_TEXT_SINGLE + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_SINGLE;\n            $(tohide).addClass('hidden');\n            $(toshow).removeClass('hidden');\n            let list = [];\n            $(SELECTORS.NOTEINDEX + ' ' + SELECTORS.CHECKBOX_LIST_NOTE + ':checked').each(function() {\n                list.push($(this).val());\n            });\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_MULTI).data('noteid', list);\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_MULTI).focus();\n        } else {\n            let tohide = SELECTORS.CONFIRM_TEXT_MULTI + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_MULTI + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_MULTI;\n            let toshow = SELECTORS.CONFIRM_TEXT_SINGLE + ', ' + SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ',' +\n                SELECTORS.CANCEL_DELETE_BUTTON_SINGLE;\n            $(tohide).addClass('hidden');\n            $(toshow).removeClass('hidden');\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE).data('noteid',\n                $(SELECTORS.HEADER_NOTE_DELETE).data('noteid'));\n            $(SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE).focus();\n        }\n        window.scrollTo(0, $(SELECTORS.DIALOGUE_CONTAINER).position().top);\n    };\n\n    /**\n     * Submit form ajax.\n     * @return {boolean}\n     */\n    var submitFormAjax = () => {\n        if ($(document.activeElement).data('action') == 'reset') {\n            cancelNoteForm();\n        } else {\n            let args = {};\n            args.noteid = $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val();\n            args.subject = $(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]').val();\n            args.note = $(SELECTORS.NOTE_SUMMARY).val();\n            ajax.call([{\n                methodname: 'local_notebook_update_note',\n                args: args,\n                done: function(result) {\n                    if (result) {\n                        // Refresh list.\n                        refreshNotes();\n                        // Display message success.\n                        displayMessageSuccess('notesaved');\n                        // Display Note view.\n                        displayNoteView();\n                        // Display note.\n                        displayNote(args.noteid);\n                    }\n                },\n                fail: notification.exception\n            }]);\n        }\n        return false;\n    };\n\n    /**\n     * Submit delete ajax.\n     * @return {boolean}\n     */\n    var submitDeleteAjax = () => {\n        let action = $(document.activeElement).data('action');\n        let notesids = [];\n        let keymessage = 'notedeleted';\n        if (action === 'confirm-delete-multiple') {\n            notesids = $(document.activeElement).data('noteid');\n            keymessage = 'notedeletedmultiple';\n        } else {\n            notesids.push($(document.activeElement).data('noteid'));\n        }\n        ajax.call([{\n            methodname: 'local_notebook_delete_notes',\n            args: {notes: notesids},\n            done: function(result) {\n                if (result) {\n                    // Close dialogue.\n                    closeConfirmDialogue('multiple', false);\n                    hideNoteView(false);\n                    // Display success message.\n                    displayMessageSuccess(keymessage);\n                    // Refresh list.\n                    refreshNotes();\n                    // Hide form.\n                    hideNoteForm();\n                }\n            },\n            fail: notification.exception\n        }]);\n        return false;\n    };\n\n    /**\n     * Cancel form.\n     *\n     */\n    var cancelNoteForm = () => {\n        displayNoteView();\n        $(SELECTORS.HEADER_NOTE_EDIT).focus();\n    };\n\n    /**\n     * Hide note view.\n     *\n     * @param {String} focus\n     */\n    var hideNoteView = (focus) => {\n        $(SELECTORS.HEADER_NOTE_VIEW).addClass('hidden');\n        $(SELECTORS.HEADER_NOTE_VIEW).attr('aria-hidden', true);\n        $(SELECTORS.FOOTER_NOTE_VIEW).addClass('hidden');\n        $(SELECTORS.FOOTER_NOTE_VIEW).attr('aria-hidden', true);\n        $(SELECTORS.NOTE_VIEW).addClass('hidden');\n        $(SELECTORS.NOTE_VIEW).attr('aria-hidden', true);\n        $(SELECTORS.FORM_CONTAINER).removeClass('hidden');\n        $(SELECTORS.FORM_CONTAINER).removeAttr('aria-hidden');\n        // Set focus back to last item clicked.\n        if (!focus) {\n            return;\n        }\n        $(focus).focus();\n\n        if (!editorListenersInitialized) {\n            // Enable/disabled save button.\n            if (window.tinyMCE !== undefined) {\n                window.tinyMCE.activeEditor.on('input', toggleSaveButton);\n            } else {\n                $(SELECTORS.FORM_CONTAINER + ' form textarea').on('change', toggleSaveButton);\n            }\n            $(SELECTORS.FORM_CONTAINER + ' form input[type=\"text\"]').on('input', toggleSaveButton);\n        }\n    };\n\n    /**\n     * Hide note view.\n     */\n    var hideNoteForm = () => {\n        $(SELECTORS.FORM_CONTAINER).addClass('hidden');\n        $(SELECTORS.FORM_CONTAINER).attr('aria-hidden', true);\n    };\n\n    /**\n     * Display note view.\n     */\n    var displayNoteView = () => {\n        $(SELECTORS.HEADER_NOTE_VIEW).removeClass('hidden');\n        $(SELECTORS.HEADER_NOTE_VIEW).removeAttr('aria-hidden');\n        $(SELECTORS.FOOTER_NOTE_VIEW).removeClass('hidden');\n        $(SELECTORS.FOOTER_NOTE_VIEW).removeAttr('aria-hidden');\n        $(SELECTORS.NOTE_VIEW).removeClass('hidden');\n        $(SELECTORS.NOTE_VIEW).removeAttr('aria-hidden');\n        $(SELECTORS.FORM_CONTAINER).addClass('hidden');\n        $(SELECTORS.FORM_CONTAINER).attr('aria-hidden', true);\n    };\n\n    /**\n     * Edit note view.\n     *\n     * @param {String} noteid\n     */\n    var editNoteView = (noteid) => {\n        ajax.call([{\n            methodname: 'local_notebook_read_note',\n            args: {noteid: noteid},\n            done: function(result) {\n                if (result) {\n                    if (window.tinyMCE !== undefined) {\n                        window.tinyMCE.activeEditor.setContent(result.summary);\n                    } else {\n                        $(SELECTORS.FORM_CONTAINER + \" #id_notebook_editoreditable\").html(result.summary);\n                    }\n                    $(SELECTORS.NOTE_FORM + ' textarea').val($(SELECTORS.NOTE_VIEW + ' .textareaorigin').val());\n                    $(SELECTORS.NOTE_FORM + ' textarea').trigger('change');\n                    $(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]').val(result.subject);\n                    $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val(noteid);\n                    hideNoteView(SELECTORS.NOTE_FORM + ' input[name=\"subject\"]');\n                    toggleSaveButton();\n                }\n            },\n            fail: notification.exception\n        }]);\n    };\n\n    /**\n     * Display message success.\n     *\n     * @param {String} key the string identifier.\n     *\n     */\n    var displayMessageSuccess = (key) => {\n        // Remove old message.\n        $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html('');\n        var stringkeys = [\n            {\n                key: key,\n                component: 'local_notebook'\n            },\n            {\n                key: 'close',\n                component: 'core'\n            }\n        ];\n\n        str.get_strings(stringkeys).then(function(langStrings) {\n            let messageHtml = '<div class=\"alert alert-success alert-block fade in \" role=\"alert\">' +\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"' + langStrings[1] + '\">×</button>' +\n                langStrings[0] + '</div>';\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER).html(messageHtml);\n            $(SELECTORS.MESSAGE_SUCCESS_CONTAINER + ' .alert button').focus();\n            setTimeout(function() {\n                $(SELECTORS.MESSAGE_SUCCESS_CONTAINER + ' .alert').fadeOut();\n            }, 10000);\n        });\n    };\n\n    /**\n     * Toggle save button.\n     *\n     */\n    var toggleSaveButton = () => {\n        let editorcontent = window.tinyMCE !== undefined\n            ? window.tinyMCE.activeEditor.getContent()\n            : $(SELECTORS.FORM_CONTAINER + \" #id_notebook_editoreditable\").html();\n        let emptyeditor = false;\n        let noteid = $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val();\n        let samecontent = false;\n        if (noteid !== '0') {\n            let subjectform = $(SELECTORS.NOTE_FORM + ' input[type=\"text\"]').val();\n            let subjectorigin = $(SELECTORS.NOTEINDEX + ' .titlenote').html();\n            let summaryorigin = $(SELECTORS.NOTEINDEX + ' .summarynote').html();\n            if (subjectform.localeCompare(subjectorigin) === 0 && editorcontent.localeCompare(summaryorigin) === 0) {\n                samecontent = true;\n            }\n        }\n        if (editorcontent !== undefined && editorcontent.replace(/<(.|\\n)*?>/g, '').trim().length === 0\n            && !editorcontent.includes(\"<img\")) {\n            emptyeditor = true;\n        }\n        if ($(SELECTORS.NOTE_FORM + ' input[type=\"text\"]').val() == '' || emptyeditor || samecontent) {\n            $(SELECTORS.NOTE_FORM + ' ' + SELECTORS.SAVE_BUTTON).prop('disabled', true);\n        } else {\n            $(SELECTORS.NOTE_FORM + ' ' + SELECTORS.SAVE_BUTTON).prop('disabled', false);\n        }\n    };\n\n    /**\n     * Toggle delete button.\n     *\n     */\n    var toggleDeleteButton = () => {\n        let listempty = true;\n        if ($(SELECTORS.NOTEINDEX + ' ' + SELECTORS.CHECKBOX_LIST_NOTE + ':checked').length > 0) {\n            listempty = false;\n        }\n        if (listempty) {\n            $(SELECTORS.TABLE_DELETE_BUTTON).prop('disabled', true);\n        } else {\n            $(SELECTORS.TABLE_DELETE_BUTTON).prop('disabled', false);\n        }\n    };\n\n    /**\n     * Register events for the notebook index.\n     *\n     * @param {String} userid The user ID\n     * @param {String} courseid The course ID\n     * @param {String} coursemoduleid The cours module ID\n     */\n    var registerEventListeners = (userid, courseid, coursemoduleid) => {\n        this.userid = userid;\n        this.courseid = courseid;\n        this.coursemoduleid = coursemoduleid;\n        this.$table = $(SELECTORS.NOTE_TABLE);\n        $(SELECTORS.NOTEINDEX).on('click', SELECTORS.REFRESH_BUTTON, function() {\n            refreshNotes();\n        });\n        // Note table row click event.\n        $(SELECTORS.NOTEINDEX).on('click', SELECTORS.NOTE_TABLE_ROW + ' td:not(:first-child)', function(e) {\n            if (!$(e.target).hasClass('context-note') &&\n                !$(e.target).parent().hasClass('context-note')) {\n                let noteid = $(this).closest('tr').find('.viewnote').data('noteid');\n                $(SELECTORS.NOTEINDEX + ' #notebook-table-index tr.selected').removeClass('selected');\n                displayNote(noteid);\n                $(this).closest('tr').addClass('selected');\n            }\n        });\n        // Note table row checkbox cell click event.\n        $(SELECTORS.NOTEINDEX).on('click', SELECTORS.NOTE_TABLE_ROW + ' td:first-child', function(e) {\n            if ($(this).find('.card-views').length) { // card view mode.\n                if (!$(e.target).is('label, input') &&\n                    !$(e.target).hasClass('context-note') &&\n                    !$(e.target).parent().hasClass('context-note')) {\n                    let noteid = $(this).closest('tr').find('.viewnote').data('noteid');\n                    $(SELECTORS.NOTEINDEX + ' #notebook-table-index tr.selected').removeClass('selected');\n                    displayNote(noteid);\n                    $(this).closest('tr').addClass('selected');\n                    window.scrollTo(0, $(SELECTORS.NOTE_DETAIL_CONTAINER).position().top);\n                }\n            } else {\n                $(this).find('input[type=\"checkbox\"]').trigger('click');\n            }\n        });\n        // Edit note.\n        $(SELECTORS.NOTEINDEX).on('click', SELECTORS.HEADER_NOTE_EDIT, function() {\n            editNoteView($(this).data('noteid'));\n        });\n        // Cancel edit note.\n        $(SELECTORS.NOTEINDEX).on('click', SELECTORS.CANCEL_BUTTON, function(e) {\n            e.preventDefault();\n            let noteid = $(SELECTORS.NOTE_FORM + ' input[name=\"noteid\"]').val();\n            displayNote(noteid);\n        });\n        // Cancel delete note.\n        $(SELECTORS.NOTEBOOKCONTAINER).on('click', SELECTORS.CANCEL_DELETE_BUTTON_SINGLE, function() {\n            closeConfirmDialogue('single', true);\n        });\n        $(SELECTORS.NOTEBOOKCONTAINER).on('click', SELECTORS.CANCEL_DELETE_BUTTON_MULTI, function() {\n            closeConfirmDialogue('multiple', true);\n        });\n        // Delete note button.\n        $(SELECTORS.NOTEINDEX).on('click', SELECTORS.DELETE_NOTE_BUTTON, function() {\n            let action = 'multiple';\n            if ($(this).data('noteid')) {\n                action = 'single';\n            }\n            showConfirmDialogue(action);\n        });\n        // Confirm delete note button.\n        $(SELECTORS.NOTEBOOKCONTAINER).on('click', SELECTORS.CONFIRM_DELETE_BUTTON_SINGLE + ' , ' +\n            SELECTORS.CONFIRM_DELETE_BUTTON_MULTI, submitDeleteAjax);\n\n        $(SELECTORS.FORM_CONTAINER).on('submit', 'form', submitFormAjax);\n\n        // Enable/disbled delete button.\n        $(SELECTORS.NOTEINDEX).on('change', SELECTORS.CHECKBOX_LIST_NOTE + ', ' + SELECTORS.CHECKBOX_ALL_NOTE,\n            toggleDeleteButton);\n    };\n\n    /**\n     * Initialise the notebook index.\n     *\n     * @param {String} userid The user ID\n     * @param {String} courseid The course ID\n     * @param {String} coursemoduleid The cours module ID\n     */\n    var init = (userid, courseid, coursemoduleid) => {\n        registerEventListeners(userid, courseid, coursemoduleid);\n        $(document).ready(function() {\n            displayNotes();\n        });\n    };\n\n    return {\n        init: init,\n    };\n});\n"],"names":["require","config","enforceDefine","shim","paths","bootstrapTable","M","cfg","wwwroot","bootstrapTableLocale","bootstrapTableLocaleMobile","define","$","notification","str","ajax","Templates","SELECTORS","refreshNotes","previousPageNumber","this","$table","pageNumber","displayNotes","displayNote","noteid","promises","displayNoteView","addClass","call","methodname","args","id","done","result","data","subject","summary","timestamp","created","datecreation","Date","toLocaleDateString","document","documentElement","lang","day","month","year","timecreation","toLocaleTimeString","lastmodifiedtimestamp","lastmodified","lastmodifieddate","lastmodifiedtime","render","then","html","tags","tagshtml","forEach","item","badge","url","tooltip","title","removeClass","fail","Notification","exception","userid","courseid","coursemoduleid","get_strings","key","component","langStrings","each","index","value","text","push","locale","paginationParts","paginationSuccessivelySize","paginationPagesBySide","columns","field","checkbox","visible","sortable","sortName","formatter","nbtags","length","td","nbclass","width","titleTooltip","align","row","join","onPostBody","find","slice","wrapAll","dropdown","closeConfirmDialogue","action","focus","showConfirmDialogue","toshow","list","val","window","scrollTo","position","top","submitFormAjax","activeElement","cancelNoteForm","note","displayMessageSuccess","submitDeleteAjax","notesids","keymessage","notes","hideNoteView","hideNoteForm","attr","removeAttr","undefined","tinyMCE","activeEditor","on","toggleSaveButton","stringkeys","messageHtml","setTimeout","fadeOut","editorcontent","getContent","emptyeditor","samecontent","subjectform","subjectorigin","summaryorigin","localeCompare","replace","trim","includes","prop","toggleDeleteButton","listempty","registerEventListeners","e","target","hasClass","parent","closest","is","trigger","setContent","preventDefault","init","ready"],"mappings":"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"}